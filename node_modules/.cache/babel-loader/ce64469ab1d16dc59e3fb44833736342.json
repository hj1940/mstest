{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\19065019\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"C:\\\\Users\\\\19065019\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\19065019\\\\react-test\\\\src\\\\components\\\\App\\\\index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport ItemListing from '../ItemListing';\nimport EquippedItems from '../EquippedItems';\nimport _ from 'lodash';\nimport CharacterList from '../CharacterList';\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport RenderCanvas from '../RenderCanvas';\nimport axios from 'axios';\nimport VirtualizedSelect from 'react-virtualized-select';\nimport createFilterOptions from 'react-select-fast-filter-options';\nimport Slider from 'rc-slider';\nimport RcTooltip from 'rc-tooltip';\nimport { SketchPicker } from 'react-color';\nimport Localization from '../../const/localize';\nimport Localize from '../../const/localize';\nimport { Tooltip } from 'react-tippy';\nimport FontAwesome from 'react-fontawesome';\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport 'react-tippy/dist/tippy.css';\nimport Toggle from 'react-toggle';\n\nif (localStorage['initialized'] != '2') {\n  localStorage['region'] = 'KMS';\n  localStorage['version'] = '328';\n  localStorage['initialized'] = '2';\n}\n\nif (!localStorage['language']) {\n  if (navigator.language.startsWith('ko')) localStorage['language'] = 'kr';else if (navigator.language.startsWith('ja')) localStorage['language'] = 'jp';else if (navigator.language.startsWith('zh')) localStorage['language'] = 'ch';else if (navigator.language.startsWith('nl')) localStorage['language'] = 'nl';else if (navigator.language.startsWith('pt')) localStorage['language'] = 'br';else localStorage['language'] = 'en';\n}\n\nvar creatingId = null;\n\nconst throttledErrorNotification = _.throttle(NotificationManager.error.bind(NotificationManager), 1500, {\n  leading: true\n});\n\nlet mapsIndexed = null;\nlet versions = {\n  GMS: [{\n    region: \"GMS\",\n    MapleVersionId: \"latest\",\n    IsReady: true\n  }],\n  KMS: [{\n    region: \"KMS\",\n    MapleVersionId: \"latest\",\n    IsReady: true\n  }],\n  TMS: [{\n    region: \"TMS\",\n    MapleVersionId: \"latest\",\n    IsReady: true\n  }],\n  CMS: [{\n    region: \"CMS\",\n    MapleVersionId: \"latest\",\n    IsReady: true\n  }],\n  JMS: [{\n    region: \"JMS\",\n    MapleVersionId: \"latest\",\n    IsReady: true\n  }],\n  SEA: [{\n    region: \"SEA\",\n    MapleVersionId: \"latest\",\n    IsReady: true\n  }]\n};\n\nfunction toCamel(o) {\n  var newO, origKey, newKey, value;\n\n  if (o instanceof Array) {\n    return o.map(function (value) {\n      if (typeof value === \"object\") {\n        value = toCamel(value);\n      }\n\n      return value;\n    });\n  } else {\n    newO = {};\n\n    for (origKey in o) {\n      if (o.hasOwnProperty(origKey)) {\n        newKey = (origKey.charAt(0).toLowerCase() + origKey.slice(1) || origKey).toString();\n        value = o[origKey];\n\n        if (value instanceof Array || value !== null && value.constructor === Object) {\n          value = toCamel(value);\n        }\n\n        newO[newKey] = value;\n      }\n    }\n  }\n\n  return newO;\n}\n\nlet wzPromise = axios.get(`https://maplestory.io/api/wz?cache=false`).then(response => {\n  let WZs = _.map(response.data.filter(wzEntry => wzEntry.isReady), wzEntry => {\n    return _objectSpread({}, wzEntry, {\n      region: wzEntry.region\n    });\n  });\n\n  versions = _.groupBy(WZs, 'region');\n  let region = localStorage['region'],\n      version = localStorage['version'];\n\n  if (!region || version != 'latest' && _.findIndex(versions[region], ver => ver.mapleVersionId == version) == -1) {\n    localStorage['region'] = 'KMS';\n    localStorage['version'] = '328';\n    window.location.reload();\n  }\n\n  console.log(versions);\n  return versions;\n});\nlet maps = [];\nlet mapsFilter = null;\nlet mapPromise = axios.get(`https://maplestory.io/api/KMS/328/map`).then(response => {\n  maps = _.map(response.data, map => {\n    return {\n      label: [map.streetName, map.name].join(' - '),\n      value: map.id\n    };\n  });\n  mapsFilter = createFilterOptions({\n    options: maps\n  });\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let isOpen = (localStorage || {})['hideModal'] !== 'true';\n    if (isOpen === '' || isOpen === undefined || isOpen === 'undefined') isOpen = true; // Try to recover any existing state\n\n    this.state = {\n      isModalOpen: isOpen,\n      characters: JSON.parse(localStorage['characters'] || 'false') || [false],\n      pets: JSON.parse(localStorage['pets'] || 'false') || [],\n      selectedIndex: JSON.parse(localStorage['selectedIndex'] || 'false') || 0,\n      selectedMap: JSON.parse(localStorage['selectedMap'] || 'false') || null,\n      zoom: JSON.parse(localStorage['zoom'] || 'false') || 1,\n      mapPosition: {\n        x: 0,\n        y: 0\n      },\n      backgroundColor: JSON.parse(localStorage['backgroundColor'] || false) || {\n        \"hsl\": {\n          \"h\": 0,\n          \"s\": 0,\n          \"l\": 0,\n          \"a\": 0\n        },\n        \"hex\": \"transparent\",\n        \"rgb\": {\n          \"r\": 0,\n          \"g\": 0,\n          \"b\": 0,\n          \"a\": 0\n        },\n        \"hsv\": {\n          \"h\": 0,\n          \"s\": 0,\n          \"v\": 0,\n          \"a\": 0\n        },\n        \"oldHue\": 0,\n        \"source\": \"rgb\"\n      },\n      colorPickerOpen: false,\n      language: localStorage['language'] == 'undefined' ? 'en' : localStorage['language'],\n      music: false,\n      region: localStorage['region'] ? localStorage['region'] : 'KMS',\n      version: localStorage['version'] ? localStorage['version'] : '328',\n      versions\n    };\n    if (versions.KMS.length > 1) this.state.versions = versions;else wzPromise.then(ver => this.setState({\n      versions\n    }));\n    if (this.state.selectedIndex < 0) this.state.selectedIndex = false;\n    this.state.focusRenderable = this.state.selectedIndex; // If we have a legacy character, upgrade to latest now\n\n    if (!_.isEmpty(this.state.selectedItems || {})) {\n      const currentCharacter = {\n        selectedItems: this.state.selectedItems,\n        skin: this.state.skin || 2000\n      };\n      if (this.state.characters[0] === false) this.state.characters[0] = currentCharacter;else this.state.characters.push(currentCharacter);\n    } // If we have no characters at all, gen a new shell\n\n\n    if (this.state.characters[0] === false) this.state.characters[0] = this.getNewCharacter();\n    delete localStorage['selectedItems'];\n    delete localStorage['skin'];\n    delete localStorage['frame'];\n    delete localStorage['mercEars'];\n    delete localStorage['illiumEars'];\n\n    if (localStorage['currentCharacter']) {\n      this.state = JSON.parse(localStorage['currentCharacter']);\n      delete localStorage['currentCharacter'];\n      localStorage['characters'] = JSON.stringify([...this.state.characters, this.state]);\n      this.state['characters'] = [...this.state.characters, this.state];\n    }\n\n    this.state.characters.forEach((character, index) => {\n      if (!character.id) character.id = Date.now() + (index + 1);\n      character.type = 'character';\n      character.action = character.action || 'stand1';\n      character.frame = character.frame || 0;\n      character.zoom = character.zoom || 1;\n      character.emotion = character.emotion || 'default';\n      character.skin = character.skin || 2000;\n      character.mercEars = character.mercEars || false;\n      character.illiumEars = character.illiumEars || false;\n      character.selectedItems = character.selectedItems || [];\n      character.visible = character.visible || false;\n      character.position = character.position || {\n        x: 0,\n        y: 0\n      };\n      character.flipX = character.flipX || false;\n      character.name = character.name || '';\n      character.includeBackground = character.includeBackground === undefined ? true : character.includeBackground;\n\n      let characterItems = _.values(toCamel(character.selectedItems)).map(item => {\n        if (!item.region) item.region = localStorage['region'];\n        if (!item.version) item.version = localStorage['version'];\n        return item;\n      });\n\n      character.selectedItems = _.keyBy(characterItems, item => item.typeInfo.subCategory);\n      delete character.characters;\n      delete character.otherCharacters;\n      delete character.allCharacters;\n    });\n    this.state.pets.forEach((pet, index) => {\n      if (!pet.id) pet.id = Date.now() + (index + 1);\n      pet.type = 'pet';\n      pet.position = pet.position || {\n        x: 0,\n        y: 0\n      };\n      pet.summary = `https://maplestory.io/api/KMS/328/pet/${pet.petId}/${pet.animation || 'stand0'}/${pet.frame || 0}/${_.values(pet.selectedItems).map(item => item.id).join(',')}?resize=${pet.zoom || 1}`;\n    });\n    if (this.state.selectedIndex + 1 > this.state.characters.length + this.state.pets.length || !this.state.characters.length) this.state.selectedIndex = false;\n    document.addEventListener(\"click\", this.handleClick.bind(this));\n    if (maps.length) this.state.mapsLoaded = true;else mapPromise.then(() => setTimeout(() => this.setState({\n      mapsLoaded: true\n    }), 250));\n  }\n\n  changeRegionVersion(region, version) {\n    localStorage['region'] = region;\n    localStorage['version'] = version; // Much easier than trying to reload everything here :D\n\n    window.location.reload();\n  }\n\n  handleClick(e) {\n    let element = e.target;\n    let found = false;\n\n    while (this.state.colorPickerOpen && !found && (element = element.parentElement) != null) {\n      if (element.className != 'bg-color-picker-container') continue;else {\n        found = true;\n        console.log('found bg-color-picker-container');\n      }\n    }\n\n    if (!found && this.state.colorPickerOpen) this.setState({\n      colorPickerOpen: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          characters = _this$state.characters,\n          pets = _this$state.pets,\n          selectedIndex = _this$state.selectedIndex,\n          isModalOpen = _this$state.isModalOpen,\n          zoom = _this$state.zoom,\n          summary = _this$state.summary,\n          selectedMap = _this$state.selectedMap,\n          focusRenderable = _this$state.focusRenderable,\n          backgroundColor = _this$state.backgroundColor,\n          colorPickerOpen = _this$state.colorPickerOpen,\n          language = _this$state.language,\n          music = _this$state.music;\n    const localized = Localize.getLocalized(language);\n    const bgColorText = `rgba(${backgroundColor.rgb.r}, ${backgroundColor.rgb.g}, ${backgroundColor.rgb.b}, ${backgroundColor.rgb.a})`;\n    const renderables = characters.concat(pets);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(RenderCanvas, {\n      backgroundColor: bgColorText,\n      zoom: zoom,\n      mapId: selectedMap,\n      renderables: renderables,\n      selectedRenderable: selectedIndex,\n      focusRenderable: focusRenderable === undefined ? selectedIndex : focusRenderable,\n      onUpdateRenderable: this.updateRenderable.bind(this),\n      onClick: this.clickCanvas.bind(this),\n      localized: localized,\n      onClickRenderable: this.userUpdateSelectedRenderable.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), selectedIndex !== false ? React.createElement(ItemListing, {\n      target: renderables[selectedIndex],\n      onItemSelected: this.userSelectedItem.bind(this),\n      localized: localized,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }) : '', React.createElement(CharacterList, {\n      renderables: renderables,\n      selectedIndex: selectedIndex,\n      onAddCharacter: this.addCharacter.bind(this),\n      onAddPet: this.addPet.bind(this),\n      onImportCharacter: this.importCharacter.bind(this),\n      onDeleteCharacter: this.removeCharacter.bind(this),\n      onCloneCharacter: this.cloneCharacter.bind(this),\n      onDeletePet: this.removePet.bind(this),\n      localized: localized,\n      onUpdateSelectedCharacter: function (renderable) {\n        this.userUpdateSelectedRenderable(renderable, () => {\n          this.setState({\n            focusRenderable: this.state.selectedIndex\n          });\n        });\n      }.bind(this),\n      onUpdateCharacter: this.userUpdateCharacter.bind(this),\n      onUpdatePet: this.userUpdatePet.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), selectedIndex !== false && !_.isEmpty(renderables[selectedIndex].selectedItems) ? React.createElement(EquippedItems, {\n      equippedItems: renderables[selectedIndex].selectedItems,\n      onRemoveItem: this.userRemovedItem.bind(this),\n      name: renderables[selectedIndex].name,\n      skinId: renderables[selectedIndex].skin,\n      onUpdateItem: this.updateItem.bind(this),\n      localized: localized,\n      onRemoveItems: this.userRemovedItems.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }) : '', React.createElement(\"div\", {\n      className: \"disclaimer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, localized.prototype)), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), music ? React.createElement(\"audio\", {\n      src: `//maplestory.io/api/KMS/328/map/${selectedMap}/bgm`,\n      autoPlay: true,\n      loop: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }) : '');\n  }\n\n  renderSettings() {\n    const _this$state2 = this.state,\n          characters = _this$state2.characters,\n          pets = _this$state2.pets,\n          selectedIndex = _this$state2.selectedIndex,\n          isModalOpen = _this$state2.isModalOpen,\n          zoom = _this$state2.zoom,\n          summary = _this$state2.summary,\n          selectedMap = _this$state2.selectedMap,\n          focusRenderable = _this$state2.focusRenderable,\n          backgroundColor = _this$state2.backgroundColor,\n          colorPickerOpen = _this$state2.colorPickerOpen,\n          language = _this$state2.language;\n    const localized = Localize.getLocalized(language);\n    const bgColorText = `rgba(${backgroundColor.rgb.r}, ${backgroundColor.rgb.g}, ${backgroundColor.rgb.b}, ${backgroundColor.rgb.a})`;\n    return React.createElement(\"div\", {\n      className: \"settings-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"bg-color-picker-container\",\n      onClick: this.openColorPicker.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Background color\", React.createElement(\"div\", {\n      className: \"bg-color-picker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bg-color-grid\",\n      style: {\n        backgroundColor: bgColorText\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })), colorPickerOpen ? React.createElement(SketchPicker, {\n      color: bgColorText,\n      onChange: this.onChangeColor.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }) : ''), React.createElement(\"label\", {\n      className: \"canvas-zoom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, localized.zoom), React.createElement(Slider, {\n      value: zoom || 1,\n      min: 0.25,\n      max: 2,\n      step: 0.25,\n      handle: handle,\n      onChange: this.changeZoom.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"canvas-zoom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, localized.language), React.createElement(\"select\", {\n      value: this.state.language,\n      onChange: this.changeLanguage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"en\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"English\"), React.createElement(\"option\", {\n      value: \"jp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Japanese\"), React.createElement(\"option\", {\n      value: \"kr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Korean\"), React.createElement(\"option\", {\n      value: \"ch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"Chinese (Traditional)\"), React.createElement(\"option\", {\n      value: \"nl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Dutch\"), React.createElement(\"option\", {\n      value: \"br\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Portuguese (Brazil)\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"map-select-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(VirtualizedSelect, {\n      filterOptions: mapsFilter,\n      isLoading: maps.length === 0,\n      name: \"map-selection\",\n      searchable: true,\n      clearable: true,\n      simpleValue: true,\n      value: selectedMap,\n      onChange: this.selectMap.bind(this),\n      options: maps,\n      maxHeight: 400,\n      styles: {\n        menuList: (styles, {\n          data\n        }) => {\n          return _objectSpread({}, styles, {\n            height: '400px'\n          });\n        },\n        menu: (styles, {\n          data\n        }) => {\n          return _objectSpread({}, styles, {\n            height: '400px'\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, localized.region), React.createElement(\"select\", {\n      value: this.state.region,\n      onChange: e => this.changeRegionVersion(e.target.value, \"latest\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, _.keys(this.state.versions).map(versionName => React.createElement(\"option\", {\n      value: versionName,\n      key: versionName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, versionName)))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, localized.version), React.createElement(\"select\", {\n      value: this.state.version,\n      onChange: e => this.changeRegionVersion(this.state.region, e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, this.state.versions[this.state.region].map(({\n      mapleVersionId\n    }) => React.createElement(\"option\", {\n      value: mapleVersionId,\n      key: mapleVersionId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, mapleVersionId)), React.createElement(\"option\", {\n      value: \"latest\",\n      key: \"latest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"latest\"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, localized.playMusic), React.createElement(Toggle, {\n      onChange: this.toggleMusic.bind(this),\n      checked: this.state.music,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.exportAllCharacters.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"Export All Characters\")));\n  }\n\n  toggleMusic(e) {\n    this.setState({\n      music: !this.state.music\n    });\n  }\n\n  exportAllCharacters() {\n    this.state.characters.forEach(character => {\n      const a = document.createElement('a');\n      a.style = 'display: none;';\n      document.body.appendChild(a);\n      const payload = JSON.stringify(character, null, 2),\n            blob = new Blob([payload], {\n        type: 'octet/stream'\n      }),\n            url = window.URL.createObjectURL(blob);\n      a.href = url;\n      if (character.name) a.download = character.name + '-data.json';else a.download = 'character-data.json';\n      a.click();\n      window.URL.revokeObjectURL(url);\n      a.remove();\n    });\n  }\n\n  changeLanguage(e) {\n    this.setState({\n      language: e.target.value\n    });\n    localStorage['language'] = e.target.value;\n  }\n\n  changeZoom(newZoom) {\n    this.setState({\n      zoom: newZoom\n    });\n    localStorage['zoom'] = newZoom;\n  }\n\n  selectMap(mapId) {\n    this.setState({\n      selectedMap: mapId\n    });\n    localStorage['selectedMap'] = mapId;\n  }\n\n  updateRenderable(renderable, newProps) {\n    if (renderable.type == 'pet') this.userUpdatePet(renderable, newProps);\n    if (renderable.type == 'character' || renderable.type === undefined) this.userUpdateCharacter(renderable, newProps);\n  }\n\n  clickCanvas(e) {\n    if (e.target === e.currentTarget && this.state.characters.length + this.state.pets.length > 1) {\n      this.setState({\n        selectedIndex: false\n      });\n      localStorage['selectedIndex'] = 'false';\n    }\n  }\n\n  addPet() {\n    var pets = [...(this.state.pets || []), this.getNewPet()];\n    this.setState({\n      pets,\n      selectedIndex: this.state.characters.length + this.state.pets.length\n    });\n    localStorage['pets'] = JSON.stringify(pets);\n  }\n\n  removePet(pet) {\n    var pets = this.state.pets.filter(c => c != pet);\n    this.setState({\n      pets,\n      selectedIndex: false,\n      zoom: 1\n    }); // Unselect any pet in case we delete the last pet\n\n    localStorage['pets'] = JSON.stringify(pets);\n    localStorage['selectedIndex'] = false;\n    localStorage['zoom'] = 1;\n  }\n\n  getNewPet() {\n    const andysFavePetIds = [5000000, 5000001, 5000002, 5000003, 5000004, 5000005];\n    const petId = andysFavePetIds[Math.floor(Math.random() * andysFavePetIds.length)];\n    return {\n      petId,\n      selectedItems: [],\n      id: Date.now(),\n      type: 'pet',\n      summary: `https://maplestory.io/api/KMS/328/pet/${petId}/stand0`,\n      animation: 'stand0',\n      visible: true,\n      frame: 0,\n      zoom: 1,\n      fhSnap: true,\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n\n  importCharacter(e) {\n    let target = e.target;\n    let importAll = Array.prototype.map.call(target.files, file => {\n      return new Promise((res, rej) => {\n        let extension = file.name.substr(file.name.lastIndexOf('.') + 1).toLowerCase();\n\n        if (extension != 'json') {\n          console.warn('Not valid JSON file');\n          return;\n        }\n\n        let reader = new FileReader();\n\n        reader.onload = function (ev) {\n          let payload = ev.target.result;\n          let data = JSON.parse(payload);\n          res();\n          if (!data.id || data.type != 'character' || !data.selectedItems) return;\n          data.id = Date.now();\n          let characters = [...this.state.characters, data];\n          this.setState({\n            characters,\n            selectedIndex: this.state.characters.length\n          });\n          localStorage['characters'] = JSON.stringify(characters);\n        }.bind(this);\n\n        reader.readAsText(file, 'UTF8');\n      });\n    });\n    Promise.all(importAll).then(() => {\n      target.value = '';\n    });\n  }\n\n  addCharacter() {\n    var characters = [...this.state.characters, this.getNewCharacter()];\n    this.setState({\n      characters,\n      selectedIndex: this.state.characters.length\n    });\n    localStorage['characters'] = JSON.stringify(characters);\n  }\n\n  removeCharacter(character) {\n    var characters = this.state.characters.filter(c => c != character);\n    this.setState({\n      characters,\n      selectedIndex: false,\n      zoom: 1\n    }); // Unselect any character in case we delete the last character\n\n    localStorage['characters'] = JSON.stringify(characters);\n    localStorage['selectedIndex'] = false;\n    localStorage['zoom'] = 1;\n  }\n\n  cloneCharacter(character) {\n    let characters = [...this.state.characters];\n    let indexOfCharacter = characters.indexOf(character);\n    characters.splice(indexOfCharacter + 1, 0, _objectSpread({}, character, {\n      id: Date.now(),\n      position: {\n        x: character.position.x + 100,\n        y: character.position.y\n      }\n    }));\n    let newCharacterIndex = indexOfCharacter + 1;\n    this.setState({\n      characters,\n      selectedIndex: newCharacterIndex,\n      focusRenderable: newCharacterIndex + 1\n    });\n    localStorage['selectedIndex'] = newCharacterIndex;\n    localStorage['characters'] = JSON.stringify(characters);\n  }\n\n  userUpdateSelectedRenderable(renderable, callback) {\n    let selectedIndex = this.state.characters.indexOf(renderable);\n\n    if (selectedIndex == -1) {\n      selectedIndex = this.state.pets.indexOf(renderable);\n      if (selectedIndex != -1) selectedIndex += this.state.characters.length;\n    }\n\n    this.setState({\n      selectedIndex,\n      zoom: 1\n    }, callback);\n    localStorage['selectedIndex'] = selectedIndex;\n    localStorage['zoom'] = 1;\n  }\n\n  userUpdatePet(pet, newProps) {\n    if (pet.locked === true && newProps.locked === undefined) {\n      throttledErrorNotification('Pet is locked and can not be modified', '', 1000);\n      return;\n    }\n\n    const pets = [...this.state.pets];\n    const petIndex = pets.indexOf(pet);\n\n    const currentPet = pets[petIndex] = _objectSpread({}, pet, {}, newProps);\n\n    currentPet.summary = `https://maplestory.io/api/KMS/328/pet/${currentPet.petId}/${currentPet.animation || 'stand0'}/${currentPet.frame || 0}/${_.values(currentPet.selectedItems).map(item => item.id).join(',')}?resize=${currentPet.zoom || 1}`;\n    this.setState({\n      pets: pets\n    });\n    localStorage['pets'] = JSON.stringify(pets);\n  }\n\n  userUpdateCharacter(character, newProps) {\n    if (character.locked === true && newProps.locked === undefined) {\n      throttledErrorNotification('Character is locked and can not be modified', '', 1000);\n      return;\n    }\n\n    const characters = [...this.state.characters];\n    const characterIndex = characters.indexOf(character);\n\n    const currentCharacter = characters[characterIndex] = _objectSpread({}, character, {}, newProps);\n\n    const itemsWithEmotion = _.values(currentCharacter.selectedItems).filter(item => item.id && (item.visible === undefined || item.visible)).map(item => {\n      var itemEntry = item.id >= 20000 && item.id <= 29999 ? `${item.id}:${currentCharacter.emotion}` : item.id;\n      if (item.hue) itemEntry = itemEntry + ';' + item.hue;\n      return itemEntry;\n    });\n\n    const backgroundColor = this.state.backgroundColor;\n    const bgColorText = `${backgroundColor.rgb.r},${backgroundColor.rgb.g},${backgroundColor.rgb.b},${backgroundColor.rgb.a}`;\n    this.setState({\n      characters: characters\n    });\n    localStorage['characters'] = JSON.stringify(characters);\n  }\n\n  getNewCharacter() {\n    return {\n      id: Date.now(),\n      type: 'character',\n      action: 'stand1',\n      emotion: 'default',\n      skin: 2000,\n      zoom: 1,\n      frame: 0,\n      mercEars: false,\n      illiumEars: false,\n      selectedItems: [],\n      visible: true,\n      position: {\n        x: 0,\n        y: 0\n      },\n      fhSnap: true\n    };\n  }\n\n  updateSelectedRenderable(props) {\n    if (this.state.selectedIndex + 1 > this.state.characters.length) this.userUpdatePet(this.state.pets[this.state.selectedIndex - this.state.characters.length], props);else this.userUpdateCharacter(this.state.characters[this.state.selectedIndex], props);\n  }\n\n  setModalOpen(isModalOpen) {\n    this.setState({\n      isModalOpen\n    });\n  }\n\n  userSelectedItem(item) {\n    let selectedRenderable = null;\n    if (this.state.selectedIndex + 1 > this.state.characters.length) selectedRenderable = this.state.pets[this.state.selectedIndex - this.state.characters.length];else selectedRenderable = this.state.characters[this.state.selectedIndex];\n    item.region = localStorage['region'];\n    item.version = localStorage['version'];\n\n    let selectedItems = _objectSpread({}, selectedRenderable.selectedItems);\n\n    if (item.typeInfo) {\n      if (item.typeInfo.subCategory === 'Overall') {\n        delete selectedItems['Top'];\n        delete selectedItems['Bottom'];\n      }\n    }\n\n    if (item.similar) {\n      item = _objectSpread({}, item);\n      delete item['similar'];\n    }\n\n    if (item.typeInfo) {\n      selectedItems[item.typeInfo.subCategory] = item;\n    }\n\n    this.updateItems(selectedItems);\n  }\n\n  userRemovedItem(item) {\n    let selectedItems = _objectSpread({}, this.state.characters[this.state.selectedIndex].selectedItems);\n\n    delete selectedItems[item.typeInfo.subCategory];\n    this.updateItems(selectedItems);\n  }\n\n  userRemovedItems() {\n    let selectedItems = {};\n    this.updateItems(selectedItems);\n  }\n\n  updateItem(item, newProps) {\n    let selectedItems = _objectSpread({}, this.state.characters[this.state.selectedIndex].selectedItems);\n\n    selectedItems[item.typeInfo.subCategory] = _objectSpread({}, item, {}, newProps);\n    this.updateItems(selectedItems);\n  }\n\n  updateItems(selectedItems) {\n    console.log('New Items: ', selectedItems);\n    this.updateSelectedRenderable({\n      selectedItems\n    });\n  }\n\n  onChangeColor(backgroundColor, event) {\n    const bgColorText = `${backgroundColor.rgb.r},${backgroundColor.rgb.g},${backgroundColor.rgb.b},${backgroundColor.rgb.a}`;\n    const characters = this.state.characters.map((character, index) => {\n      const itemsWithEmotion = _.values(character.selectedItems).filter(item => item.id && (item.visible === undefined || item.visible)).map(item => {\n        var itemEntry = item.id >= 20000 && item.id <= 29999 ? `${item.id}:${character.emotion}` : item.id;\n        if (item.hue) itemEntry = itemEntry + ';' + item.hue;\n        return itemEntry;\n      });\n\n      return _objectSpread({}, character);\n    });\n    this.setState({\n      backgroundColor,\n      characters\n    });\n    localStorage['backgroundColor'] = JSON.stringify(backgroundColor);\n  }\n\n  openColorPicker() {\n    this.setState({\n      colorPickerOpen: true\n    });\n  }\n\n}\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const value = props.value,\n        dragging = props.dragging,\n        index = props.index,\n        restProps = _objectWithoutProperties(props, [\"value\", \"dragging\", \"index\"]);\n\n  return React.createElement(RcTooltip, {\n    prefixCls: \"rc-slider-tooltip\",\n    overlay: value,\n    visible: dragging,\n    placement: \"top\",\n    style: {\n      border: \"solid 2px hsl(\" + value + \", 53%, 53%)\"\n    },\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779\n    },\n    __self: this\n  }, React.createElement(Handle, Object.assign({\n    value: value\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/19065019/react-test/src/components/App/index.js"],"names":["React","Component","ItemListing","EquippedItems","_","CharacterList","NotificationContainer","NotificationManager","RenderCanvas","axios","VirtualizedSelect","createFilterOptions","Slider","RcTooltip","SketchPicker","Localization","Localize","Tooltip","FontAwesome","Toggle","localStorage","navigator","language","startsWith","creatingId","throttledErrorNotification","throttle","error","bind","leading","mapsIndexed","versions","GMS","region","MapleVersionId","IsReady","KMS","TMS","CMS","JMS","SEA","toCamel","o","newO","origKey","newKey","value","Array","map","hasOwnProperty","charAt","toLowerCase","slice","toString","constructor","Object","wzPromise","get","then","response","WZs","data","filter","wzEntry","isReady","groupBy","version","findIndex","ver","mapleVersionId","window","location","reload","console","log","maps","mapsFilter","mapPromise","label","streetName","name","join","id","options","App","props","isOpen","undefined","state","isModalOpen","characters","JSON","parse","pets","selectedIndex","selectedMap","zoom","mapPosition","x","y","backgroundColor","colorPickerOpen","music","length","setState","focusRenderable","isEmpty","selectedItems","currentCharacter","skin","push","getNewCharacter","stringify","forEach","character","index","Date","now","type","action","frame","emotion","mercEars","illiumEars","visible","position","flipX","includeBackground","characterItems","values","item","keyBy","typeInfo","subCategory","otherCharacters","allCharacters","pet","summary","petId","animation","document","addEventListener","handleClick","mapsLoaded","setTimeout","changeRegionVersion","e","element","target","found","parentElement","className","render","localized","getLocalized","bgColorText","rgb","r","g","b","a","renderables","concat","updateRenderable","clickCanvas","userUpdateSelectedRenderable","userSelectedItem","addCharacter","addPet","importCharacter","removeCharacter","cloneCharacter","removePet","renderable","userUpdateCharacter","userUpdatePet","userRemovedItem","updateItem","userRemovedItems","prototype","renderSettings","openColorPicker","onChangeColor","handle","changeZoom","changeLanguage","selectMap","menuList","styles","height","menu","keys","versionName","playMusic","toggleMusic","exportAllCharacters","createElement","style","body","appendChild","payload","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","remove","newZoom","mapId","newProps","currentTarget","getNewPet","c","andysFavePetIds","Math","floor","random","fhSnap","importAll","call","files","file","Promise","res","rej","extension","substr","lastIndexOf","warn","reader","FileReader","onload","ev","result","readAsText","all","indexOfCharacter","indexOf","splice","newCharacterIndex","callback","locked","petIndex","currentPet","characterIndex","itemsWithEmotion","itemEntry","hue","updateSelectedRenderable","setModalOpen","selectedRenderable","similar","updateItems","event","createSliderWithTooltip","Range","Handle","dragging","restProps","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport ItemListing from '../ItemListing'\nimport EquippedItems from '../EquippedItems'\nimport _ from 'lodash'\nimport CharacterList from '../CharacterList'\nimport 'react-notifications/lib/notifications.css'\nimport {NotificationContainer, NotificationManager} from 'react-notifications'\nimport RenderCanvas from '../RenderCanvas'\nimport axios from 'axios'\nimport VirtualizedSelect from 'react-virtualized-select'\n\nimport createFilterOptions from 'react-select-fast-filter-options'\nimport Slider from 'rc-slider'\nimport RcTooltip from 'rc-tooltip'\nimport { SketchPicker } from 'react-color'\nimport Localization from '../../const/localize'\nimport Localize from '../../const/localize'\nimport { Tooltip } from 'react-tippy'\nimport FontAwesome from 'react-fontawesome'\nimport 'rc-slider/assets/index.css'\nimport 'rc-tooltip/assets/bootstrap.css'\nimport 'react-tippy/dist/tippy.css';\nimport Toggle from 'react-toggle'\n\nif (localStorage['initialized'] != '2') {\n  localStorage['region'] = 'KMS'\n  localStorage['version'] = '328'\n  localStorage['initialized'] = '2'\n}\n\nif (!localStorage['language']) {\n  if (navigator.language.startsWith('ko')) localStorage['language'] = 'kr'\n  else if (navigator.language.startsWith('ja')) localStorage['language'] = 'jp'\n  else if (navigator.language.startsWith('zh')) localStorage['language'] = 'ch'\n  else if (navigator.language.startsWith('nl')) localStorage['language'] = 'nl'\n  else if (navigator.language.startsWith('pt')) localStorage['language'] = 'br'\n  else localStorage['language'] = 'en'\n}\n\nvar creatingId = null\nconst throttledErrorNotification = _.throttle(NotificationManager.error.bind(NotificationManager), 1500, { leading:true })\nlet mapsIndexed = null\nlet versions = {\n  GMS: [{region: \"GMS\", MapleVersionId: \"latest\", IsReady: true}],\n  KMS: [{region: \"KMS\", MapleVersionId: \"latest\", IsReady: true}],\n  TMS: [{region: \"TMS\", MapleVersionId: \"latest\", IsReady: true}],\n  CMS: [{region: \"CMS\", MapleVersionId: \"latest\", IsReady: true}],\n  JMS: [{region: \"JMS\", MapleVersionId: \"latest\", IsReady: true}],\n  SEA: [{region: \"SEA\", MapleVersionId: \"latest\", IsReady: true}]\n}\n\nfunction toCamel(o) {\n  var newO, origKey, newKey, value\n  if (o instanceof Array) {\n    return o.map(function(value) {\n        if (typeof value === \"object\") {\n          value = toCamel(value)\n        }\n        return value\n    })\n  } else {\n    newO = {}\n    for (origKey in o) {\n      if (o.hasOwnProperty(origKey)) {\n        newKey = (origKey.charAt(0).toLowerCase() + origKey.slice(1) || origKey).toString()\n        value = o[origKey]\n        if (value instanceof Array || (value !== null && value.constructor === Object)) {\n          value = toCamel(value)\n        }\n        newO[newKey] = value\n      }\n    }\n  }\n  return newO\n}\n\nlet wzPromise = axios.get(`https://maplestory.io/api/wz?cache=false`)\n.then(response => {\n  let WZs = _.map(response.data.filter(wzEntry => wzEntry.isReady), wzEntry => {\n    return {\n      ...wzEntry,\n      region: wzEntry.region\n    }\n  })\n  versions = _.groupBy(WZs, 'region')\n\n  let region = localStorage['region'], version = localStorage['version']\n\n  if (!region || (version != 'latest' && _.findIndex(versions[region], ver => ver.mapleVersionId == version) == -1)) {\n    localStorage['region'] = 'KMS'\n    localStorage['version'] = '328'\n    window.location.reload()\n  }\n\n  console.log(versions);\n  return versions;\n})\n\nlet maps = []\nlet mapsFilter = null\nlet mapPromise = axios.get(`https://maplestory.io/api/KMS/328/map`).then(response => {\n      maps = _.map(response.data, map => {\n        return {\n          label: [map.streetName, map.name].join(' - '),\n          value: map.id\n        }\n      });\n      mapsFilter = createFilterOptions({options: maps})\n    });\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    let isOpen = (localStorage || {})['hideModal'] !== 'true'\n    if (isOpen === '' || isOpen === undefined || isOpen === 'undefined')\n      isOpen = true\n\n    // Try to recover any existing state\n    this.state = {\n      isModalOpen: isOpen,\n      characters: JSON.parse(localStorage['characters'] || 'false') || [false],\n      pets: JSON.parse(localStorage['pets'] || 'false') || [],\n      selectedIndex: JSON.parse(localStorage['selectedIndex'] || 'false') || 0,\n      selectedMap: JSON.parse(localStorage['selectedMap'] || 'false') || null,\n      zoom: JSON.parse(localStorage['zoom'] || 'false') || 1,\n      mapPosition: {x: 0, y: 0},\n      backgroundColor: JSON.parse(localStorage['backgroundColor'] || false) || {\"hsl\":{\"h\":0,\"s\":0,\"l\":0,\"a\":0},\"hex\":\"transparent\",\"rgb\":{\"r\":0,\"g\":0,\"b\":0,\"a\":0},\"hsv\":{\"h\":0,\"s\":0,\"v\":0,\"a\":0},\"oldHue\":0,\"source\":\"rgb\"},\n      colorPickerOpen: false,\n      language: localStorage['language'] == 'undefined' ? 'en' : localStorage['language'],\n      music: false,\n      region: localStorage['region'] ? localStorage['region'] : 'KMS',\n      version: localStorage['version'] ? localStorage['version'] : '328',\n      versions\n    }\n\n    if (versions.KMS.length > 1)\n      this.state.versions = versions\n    else\n      wzPromise.then(ver => this.setState({versions}))\n\n    if (this.state.selectedIndex < 0) this.state.selectedIndex = false;\n    this.state.focusRenderable = this.state.selectedIndex\n\n    // If we have a legacy character, upgrade to latest now\n    if (!_.isEmpty(this.state.selectedItems || {})) {\n      const currentCharacter = {\n        selectedItems: this.state.selectedItems,\n        skin: this.state.skin || 2000\n      }\n      if (this.state.characters[0] === false)\n        this.state.characters[0] = currentCharacter;\n      else\n        this.state.characters.push(currentCharacter)\n    }\n\n    // If we have no characters at all, gen a new shell\n    if (this.state.characters[0] === false)\n      this.state.characters[0] = this.getNewCharacter()\n\n    delete localStorage['selectedItems'];\n    delete localStorage['skin'];\n    delete localStorage['frame'];\n    delete localStorage['mercEars'];\n    delete localStorage['illiumEars'];\n\n    if (localStorage['currentCharacter']) {\n      this.state = JSON.parse(localStorage['currentCharacter'])\n      delete localStorage['currentCharacter']\n      localStorage['characters'] = JSON.stringify([...this.state.characters, this.state])\n      this.state['characters'] = [...this.state.characters, this.state]\n    }\n\n    this.state.characters.forEach((character, index) => {\n      if (!character.id) character.id = Date.now() + (index + 1)\n      character.type = 'character'\n      character.action = character.action || 'stand1'\n      character.frame = character.frame || 0\n      character.zoom = character.zoom || 1\n      character.emotion = character.emotion || 'default'\n      character.skin = character.skin || 2000\n      character.mercEars = character.mercEars || false\n      character.illiumEars = character.illiumEars || false\n      character.selectedItems = character.selectedItems || []\n      character.visible = character.visible || false\n      character.position = character.position || {x:0,y:0}\n      character.flipX = character.flipX || false;\n      character.name = character.name || '';\n      character.includeBackground = character.includeBackground === undefined ? true : character.includeBackground\n      let characterItems = _.values(toCamel(character.selectedItems)).map(item => {\n        if (!item.region) item.region = localStorage['region']\n        if (!item.version) item.version = localStorage['version']\n        return item\n      })\n      character.selectedItems = _.keyBy(characterItems, (item) => item.typeInfo.subCategory)\n      delete character.characters\n      delete character.otherCharacters\n      delete character.allCharacters\n    })\n\n    this.state.pets.forEach((pet, index) => {\n      if (!pet.id) pet.id = Date.now() + (index + 1)\n      pet.type = 'pet'\n      pet.position = pet.position || { x: 0, y: 0}\n      pet.summary = `https://maplestory.io/api/KMS/328/pet/${pet.petId}/${pet.animation || 'stand0'}/${pet.frame || 0}/${_.values(pet.selectedItems).map(item => item.id).join(',')}?resize=${pet.zoom || 1}`\n    })\n\n    if ((this.state.selectedIndex + 1) > (this.state.characters.length + this.state.pets.length) || !this.state.characters.length)\n      this.state.selectedIndex = false;\n\n\n    document.addEventListener(\"click\", this.handleClick.bind(this))\n\n    if (maps.length) this.state.mapsLoaded = true\n    else mapPromise.then(() => setTimeout(() => this.setState({mapsLoaded : true}), 250))\n  }\n\n  changeRegionVersion(region, version) {\n    localStorage['region'] = region\n    localStorage['version'] = version\n\n    // Much easier than trying to reload everything here :D\n    window.location.reload()\n  }\n\n  handleClick(e) {\n    let element = e.target\n    let found = false\n    while (this.state.colorPickerOpen && !found && (element = element.parentElement) != null) {\n      if (element.className != 'bg-color-picker-container') continue;\n      else {\n        found = true;\n        console.log('found bg-color-picker-container')\n      }\n    }\n\n    if (!found && this.state.colorPickerOpen) this.setState({ colorPickerOpen: false })\n  }\n\n\n  render() {\n    const {\n      characters,\n      pets,\n      selectedIndex,\n      isModalOpen,\n      zoom,\n      summary,\n      selectedMap,\n      focusRenderable,\n      backgroundColor,\n      colorPickerOpen,\n      language,\n      music\n    } = this.state\n\n    const localized = Localize.getLocalized(language)\n\n    const bgColorText = `rgba(${backgroundColor.rgb.r}, ${backgroundColor.rgb.g}, ${backgroundColor.rgb.b}, ${backgroundColor.rgb.a})`\n\n    const renderables = characters.concat(pets)\n\n    return (\n      <div className={\"App\"}>\n\n        <RenderCanvas\n          backgroundColor={bgColorText}\n          zoom={zoom}\n          mapId={selectedMap}\n          renderables={renderables}\n          selectedRenderable={selectedIndex}\n          focusRenderable={focusRenderable === undefined ? selectedIndex : focusRenderable}\n          onUpdateRenderable={this.updateRenderable.bind(this)}\n          onClick={this.clickCanvas.bind(this)}\n          localized={localized}\n          onClickRenderable={this.userUpdateSelectedRenderable.bind(this)}/>\n        { (selectedIndex !== false) ?\n          <ItemListing\n            target={renderables[selectedIndex]}\n            onItemSelected={this.userSelectedItem.bind(this)}\n            localized={localized} /> : '' }\n        <CharacterList\n          renderables={renderables}\n          selectedIndex={selectedIndex}\n          onAddCharacter={this.addCharacter.bind(this)}\n          onAddPet={this.addPet.bind(this)}\n          onImportCharacter={this.importCharacter.bind(this)}\n          onDeleteCharacter={this.removeCharacter.bind(this)}\n          onCloneCharacter={this.cloneCharacter.bind(this)}\n          onDeletePet={this.removePet.bind(this)}\n          localized={localized}\n          onUpdateSelectedCharacter={function (renderable) {\n            this.userUpdateSelectedRenderable(renderable, () => {\n              this.setState({\n                focusRenderable: this.state.selectedIndex\n              })\n            })\n          }.bind(this)}\n          onUpdateCharacter={this.userUpdateCharacter.bind(this)}\n          onUpdatePet={this.userUpdatePet.bind(this) }/>\n        {\n          (selectedIndex !== false && !_.isEmpty(renderables[selectedIndex].selectedItems) ? <EquippedItems\n            equippedItems={renderables[selectedIndex].selectedItems}\n            onRemoveItem={this.userRemovedItem.bind(this)}\n            name={renderables[selectedIndex].name}\n            skinId={renderables[selectedIndex].skin}\n            onUpdateItem={this.updateItem.bind(this)}\n            localized={localized}\n            onRemoveItems={this.userRemovedItems.bind(this)} /> : '')\n        }\n        <div className=\"disclaimer\"><div>{localized.prototype}</div></div>\n\n        <NotificationContainer />\n        { music ? <audio src={`//maplestory.io/api/KMS/328/map/${selectedMap}/bgm`} autoPlay={true} loop={true} /> : '' }\n      </div>\n    )\n  }\n\n  renderSettings() {\n    const {\n      characters,\n      pets,\n      selectedIndex,\n      isModalOpen,\n      zoom,\n      summary,\n      selectedMap,\n      focusRenderable,\n      backgroundColor,\n      colorPickerOpen,\n      language\n    } = this.state\n\n    const localized = Localize.getLocalized(language)\n\n    const bgColorText = `rgba(${backgroundColor.rgb.r}, ${backgroundColor.rgb.g}, ${backgroundColor.rgb.b}, ${backgroundColor.rgb.a})`\n    return (\n      <div className='settings-container'>\n        <label className='bg-color-picker-container' onClick={this.openColorPicker.bind(this)}>\n        Background color\n          <div className='bg-color-picker'>\n            <div className='bg-color-grid' style={{ backgroundColor: bgColorText }}></div>\n          </div>\n          { colorPickerOpen ? <SketchPicker color={bgColorText} onChange={this.onChangeColor.bind(this)} /> : '' }\n        </label>\n        <label className='canvas-zoom'>\n          <span>{localized.zoom}</span>\n          <Slider\n            value={zoom || 1}\n            min={0.25}\n            max={2}\n            step={0.25}\n            handle={handle}\n            onChange={this.changeZoom.bind(this)} />\n        </label>\n        <label className='canvas-zoom'>\n          <span>{localized.language}</span>\n          <select value={this.state.language} onChange={this.changeLanguage.bind(this)}>\n            <option value='en'>English</option>\n            <option value='jp'>Japanese</option>\n            <option value='kr'>Korean</option>\n            <option value='ch'>Chinese (Traditional)</option>\n            <option value='nl'>Dutch</option>\n            <option value='br'>Portuguese (Brazil)</option>\n          </select>\n        </label>\n        <div>\n          <div className='map-select-container'>\n            <VirtualizedSelect\n              filterOptions={mapsFilter}\n              isLoading={maps.length === 0}\n              name='map-selection'\n              searchable\n              clearable\n              simpleValue\n              value={selectedMap}\n              onChange={this.selectMap.bind(this)}\n              options={maps}\n              maxHeight={400}\n              styles={{\n                menuList: (styles, {data}) => {\n                  return {\n                    ...styles,\n                    height: '400px'\n                  }\n                },\n                menu: (styles, {data}) => {\n                  return {\n                    ...styles,\n                    height: '400px'\n                  }\n                }\n              }}\n              />\n          </div>\n        </div>\n        <label>\n          <span>{localized.region}</span>\n          <select value={this.state.region} onChange={(e) => this.changeRegionVersion(e.target.value, \"latest\")}>\n            { _.keys(this.state.versions).map(versionName => <option value={versionName} key={versionName}>{versionName}</option>) }\n          </select>\n        </label>\n        <label>\n          <span>{localized.version}</span>\n          <select value={this.state.version} onChange={(e) => this.changeRegionVersion(this.state.region, e.target.value)}>\n            { this.state.versions[this.state.region].map(({mapleVersionId}) => <option value={mapleVersionId} key={mapleVersionId}>{mapleVersionId}</option>) }\n            <option value='latest' key='latest'>latest</option>\n          </select>\n        </label>\n        <label>\n          <span>{localized.playMusic}</span>\n          <Toggle\n            onChange={this.toggleMusic.bind(this)}\n            checked={this.state.music} />\n        </label>\n        <label>\n          <a href='#' onClick={this.exportAllCharacters.bind(this)}>Export All Characters</a>\n        </label>\n      </div>\n    )\n  }\n\n  toggleMusic(e) {\n    this.setState({\n      music: !this.state.music\n    })\n  }\n\n  exportAllCharacters() {\n    this.state.characters.forEach(character => {\n      const a = document.createElement('a')\n      a.style = 'display: none;'\n      document.body.appendChild(a)\n\n      const payload = JSON.stringify(character, null, 2),\n        blob = new Blob([payload], {type: 'octet/stream'}),\n        url = window.URL.createObjectURL(blob)\n      a.href = url\n      if (character.name)\n        a.download = character.name + '-data.json'\n      else\n        a.download = 'character-data.json'\n      a.click()\n\n      window.URL.revokeObjectURL(url)\n      a.remove()\n    })\n  }\n\n  changeLanguage(e) {\n    this.setState({\n      language: e.target.value\n    })\n    localStorage['language'] = e.target.value\n  }\n\n  changeZoom(newZoom) {\n    this.setState({ zoom: newZoom })\n    localStorage['zoom'] = newZoom\n  }\n\n  selectMap(mapId) {\n    this.setState({\n      selectedMap: mapId\n    })\n    localStorage['selectedMap'] = mapId\n  }\n\n  updateRenderable(renderable, newProps) {\n    if (renderable.type == 'pet') this.userUpdatePet(renderable, newProps)\n    if (renderable.type == 'character' || renderable.type === undefined) this.userUpdateCharacter(renderable, newProps)\n  }\n\n  clickCanvas(e) {\n    if (e.target === e.currentTarget && (this.state.characters.length + this.state.pets.length) > 1) {\n      this.setState({ selectedIndex: false })\n      localStorage['selectedIndex'] = 'false'\n    }\n  }\n\n  addPet() {\n    var pets = [...(this.state.pets || []), this.getNewPet()]\n    this.setState({pets, selectedIndex: this.state.characters.length + this.state.pets.length})\n    localStorage['pets'] = JSON.stringify(pets)\n  }\n\n  removePet(pet) {\n    var pets = this.state.pets.filter(c => c != pet)\n    this.setState({ pets, selectedIndex: false, zoom: 1 }) // Unselect any pet in case we delete the last pet\n    localStorage['pets'] = JSON.stringify(pets)\n    localStorage['selectedIndex'] = false\n    localStorage['zoom'] = 1\n  }\n\n  getNewPet() {\n    const andysFavePetIds = [5000000, 5000001, 5000002, 5000003, 5000004, 5000005]\n    const petId = andysFavePetIds[Math.floor(Math.random() * andysFavePetIds.length)]\n    return {\n      petId,\n      selectedItems: [],\n      id: Date.now(),\n      type: 'pet',\n      summary: `https://maplestory.io/api/KMS/328/pet/${petId}/stand0`,\n      animation: 'stand0',\n      visible: true,\n      frame: 0,\n      zoom: 1,\n      fhSnap: true,\n      position: { x:0, y:0 }\n    }\n  }\n\n  importCharacter(e) {\n    let target = e.target\n    let importAll = Array.prototype.map.call(target.files, file => {\n      return new Promise((res, rej) => {\n        let extension = file.name.substr(file.name.lastIndexOf('.') + 1).toLowerCase()\n        if (extension != 'json') {\n          console.warn('Not valid JSON file')\n          return\n        }\n\n        let reader = new FileReader()\n        reader.onload = function (ev) {\n          let payload = ev.target.result\n          let data = JSON.parse(payload)\n\n          res()\n          if (!data.id || data.type != 'character' || !data.selectedItems) return\n\n          data.id = Date.now()\n\n          let characters = [\n            ...this.state.characters,\n            data\n          ]\n          this.setState({\n            characters,\n            selectedIndex: this.state.characters.length\n          })\n          localStorage['characters'] = JSON.stringify(characters)\n        }.bind(this)\n\n        reader.readAsText(file, 'UTF8')\n      })\n    })\n\n    Promise.all(importAll).then(() => {\n      target.value = ''\n    })\n  }\n\n  addCharacter() {\n    var characters = [ ...this.state.characters, this.getNewCharacter() ]\n    this.setState({ characters, selectedIndex: this.state.characters.length })\n    localStorage['characters'] = JSON.stringify(characters)\n  }\n\n  removeCharacter(character) {\n    var characters = this.state.characters.filter(c => c != character)\n    this.setState({ characters, selectedIndex: false, zoom: 1 }) // Unselect any character in case we delete the last character\n    localStorage['characters'] = JSON.stringify(characters)\n    localStorage['selectedIndex'] = false\n    localStorage['zoom'] = 1\n  }\n\n  cloneCharacter(character) {\n    let characters = [\n      ...this.state.characters\n    ]\n\n    let indexOfCharacter = characters.indexOf(character)\n    characters.splice(indexOfCharacter + 1, 0, {\n      ...character,\n      id: Date.now(),\n      position: {\n        x: character.position.x + 100,\n        y: character.position.y\n      }\n    })\n    let newCharacterIndex = indexOfCharacter + 1\n\n    this.setState({ characters, selectedIndex: newCharacterIndex, focusRenderable: newCharacterIndex + 1 })\n    localStorage['selectedIndex'] = newCharacterIndex\n    localStorage['characters'] = JSON.stringify(characters)\n  }\n\n  userUpdateSelectedRenderable(renderable, callback) {\n    let selectedIndex = this.state.characters.indexOf(renderable)\n    if (selectedIndex == -1) {\n      selectedIndex = this.state.pets.indexOf(renderable)\n      if (selectedIndex != -1) selectedIndex += this.state.characters.length\n    }\n    this.setState({\n      selectedIndex,\n      zoom: 1\n    }, callback)\n    localStorage['selectedIndex'] = selectedIndex\n    localStorage['zoom'] = 1\n  }\n\n  userUpdatePet(pet, newProps) {\n    if (pet.locked === true && newProps.locked === undefined) {\n      throttledErrorNotification('Pet is locked and can not be modified', '', 1000)\n      return;\n    }\n\n    const pets = [...this.state.pets]\n    const petIndex = pets.indexOf(pet)\n\n    const currentPet = pets[petIndex] = {\n      ...pet,\n      ...newProps\n    }\n\n    currentPet.summary = `https://maplestory.io/api/KMS/328/pet/${currentPet.petId}/${currentPet.animation || 'stand0'}/${currentPet.frame || 0}/${_.values(currentPet.selectedItems).map(item => item.id).join(',')}?resize=${currentPet.zoom || 1}`\n\n    this.setState({\n        pets: pets\n    })\n    localStorage['pets'] = JSON.stringify(pets)\n  }\n\n  userUpdateCharacter(character, newProps) {\n    if (character.locked === true && newProps.locked === undefined) {\n      throttledErrorNotification('Character is locked and can not be modified', '', 1000)\n      return;\n    }\n\n    const characters = [...this.state.characters]\n    const characterIndex = characters.indexOf(character)\n\n    const currentCharacter = characters[characterIndex] = {\n      ...character,\n      ...newProps\n    }\n\n    const itemsWithEmotion = _.values(currentCharacter.selectedItems)\n      .filter(item => item.id && (item.visible === undefined || item.visible))\n      .map(item => {\n        var itemEntry = item.id >= 20000 && item.id <= 29999 ? `${item.id}:${currentCharacter.emotion}` : item.id\n        if (item.hue) itemEntry = itemEntry + ';' + item.hue\n        return itemEntry\n      });\n\n    const { backgroundColor } = this.state\n    const bgColorText = `${backgroundColor.rgb.r},${backgroundColor.rgb.g},${backgroundColor.rgb.b},${backgroundColor.rgb.a}`\n\n    this.setState({\n        characters: characters\n    })\n    localStorage['characters'] = JSON.stringify(characters)\n  }\n\n  getNewCharacter() {\n    return {\n      id: Date.now(),\n      type: 'character',\n      action: 'stand1',\n      emotion: 'default',\n      skin: 2000,\n      zoom: 1,\n      frame: 0,\n      mercEars: false,\n      illiumEars: false,\n      selectedItems: [],\n      visible: true,\n      position: {x: 0, y: 0},\n      fhSnap: true\n    }\n  }\n\n  updateSelectedRenderable(props) {\n    if (this.state.selectedIndex+1 > this.state.characters.length)\n      this.userUpdatePet(this.state.pets[this.state.selectedIndex - this.state.characters.length], props)\n    else\n      this.userUpdateCharacter(this.state.characters[this.state.selectedIndex], props)\n  }\n\n  setModalOpen (isModalOpen) {\n    this.setState({ isModalOpen })\n  }\n\n  userSelectedItem (item) {\n    let selectedRenderable = null\n    if (this.state.selectedIndex+1 > this.state.characters.length) selectedRenderable = this.state.pets[this.state.selectedIndex - this.state.characters.length]\n    else selectedRenderable = this.state.characters[this.state.selectedIndex]\n\n    item.region = localStorage['region']\n    item.version = localStorage['version']\n\n    let selectedItems = {\n      ...selectedRenderable.selectedItems,\n    }\n\n    if (item.typeInfo) {\n      if (item.typeInfo.subCategory === 'Overall') {\n        delete selectedItems['Top']\n        delete selectedItems['Bottom']\n      }\n    }\n\n    if (item.similar) {\n      item = { ...item }\n      delete item['similar']\n    }\n\n    if (item.typeInfo) {\n      selectedItems[item.typeInfo.subCategory] = item\n    }\n    this.updateItems(selectedItems)\n  }\n\n  userRemovedItem (item) {\n    let selectedItems = {\n      ...this.state.characters[this.state.selectedIndex].selectedItems,\n    }\n    delete selectedItems[item.typeInfo.subCategory]\n    this.updateItems(selectedItems);\n  }\n\n  userRemovedItems () {\n    let selectedItems = {}\n    this.updateItems(selectedItems);\n  }\n\n  updateItem (item, newProps) {\n    let selectedItems = {\n      ...this.state.characters[this.state.selectedIndex].selectedItems,\n    }\n    selectedItems[item.typeInfo.subCategory] = {\n      ...item,\n      ...newProps\n    }\n    this.updateItems(selectedItems);\n  }\n\n  updateItems (selectedItems) {\n    console.log('New Items: ', selectedItems)\n    this.updateSelectedRenderable({\n      selectedItems\n    })\n  }\n\n  onChangeColor(backgroundColor, event) {\n    const bgColorText = `${backgroundColor.rgb.r},${backgroundColor.rgb.g},${backgroundColor.rgb.b},${backgroundColor.rgb.a}`\n\n    const characters = this.state.characters.map((character, index) => {\n      const itemsWithEmotion = _.values(character.selectedItems)\n      .filter(item => item.id && (item.visible === undefined || item.visible))\n      .map(item => {\n        var itemEntry = item.id >= 20000 && item.id <= 29999 ? `${item.id}:${character.emotion}` : item.id\n        if (item.hue) itemEntry = itemEntry + ';' + item.hue\n        return itemEntry\n      });\n\n      return {\n        ...character\n      }\n    });\n\n    this.setState({ backgroundColor, characters })\n    localStorage['backgroundColor'] = JSON.stringify(backgroundColor)\n  }\n\n  openColorPicker() {\n    this.setState({ colorPickerOpen: true })\n  }\n}\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <RcTooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      style={{border: \"solid 2px hsl(\"+value+\", 53%, 53%)\"}}\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </RcTooltip>\n  );\n};\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}