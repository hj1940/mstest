{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19065019\\\\react-test\\\\src\\\\components\\\\RenderCanvas\\\\CharacterCanvasElement\\\\index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport Draggable, { DraggableCore } from 'react-draggable';\nimport { NotificationManager } from 'react-notifications';\nimport axios from 'axios';\nimport _ from 'lodash';\nconst region = !localStorage['region'] ? 'KMS' : localStorage['region'];\nconst version = !localStorage['version'] ? '328' : localStorage['version'];\n\nclass CharacterCanvasElement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tryCount: 0\n    };\n    this.updateCharacterDetails(props, true);\n  }\n\n  componentDidUpdate(prevProps) {\n    const ifChanged = ['skin', 'selectedItems', 'action', 'frame', 'mercEars', 'illiumEars', 'zoom', 'flipX'];\n\n    if (_.find(ifChanged, property => this.props.character[property] != prevProps.character[property])) {\n      this.updateCharacterDetails(this.props, false);\n    }\n  }\n\n  updateCharacterDetails(props, isSync) {\n    const character = props.character;\n\n    const itemsWithEmotion = _.values(character.selectedItems).filter(item => item.id && (item.visible === undefined || item.visible)).map(item => {\n      var itemEntry = item.id >= 20000 && item.id <= 29999 ? `${item.id}:${character.emotion}` : item.id;\n      return itemEntry;\n    });\n\n    const tryCount = this.state.tryCount;\n    let itemEntries = Object.values(character.selectedItems).filter(item => item.id && (item.visible === undefined || item.visible)).map(item => {\n      let itemEntry = {\n        itemId: Number(item.id),\n        version: \"328\",\n        region: \"KMS\"\n      };\n      if (item.id >= 20000 && item.id < 30000 || item.id >= 1010000 && item.id < 1020000) itemEntry.animationName = character.emotion;\n      if (item.region && item.region.toLowerCase() != 'kms') itemEntry.region = item.region;\n      if (item.version && item.version.toLowerCase() != '328') itemEntry.version = item.version;\n      if (item.hue) itemEntry.hue = item.hue;\n      if (item.saturation != 1) itemEntry.saturation = item.saturation;\n      if (item.contrast != 1) itemEntry.contrast = item.contrast;\n      if (item.brightness != 1) itemEntry.brightness = item.brightness;\n      if (item.alpha != 1) itemEntry.alpha = item.alpha;\n      if (item.islot) itemEntry.islot = item.islot;\n      if (item.vslot) itemEntry.vslot = item.vslot;\n      return itemEntry;\n    });\n    let backgroundColor = JSON.parse(localStorage['backgroundColor'] || false) || {\n      \"hsl\": {\n        \"h\": 0,\n        \"s\": 0,\n        \"l\": 0,\n        \"a\": 0\n      },\n      \"hex\": \"transparent\",\n      \"rgb\": {\n        \"r\": 0,\n        \"g\": 0,\n        \"b\": 0,\n        \"a\": 0\n      },\n      \"hsv\": {\n        \"h\": 0,\n        \"s\": 0,\n        \"v\": 0,\n        \"a\": 0\n      },\n      \"oldHue\": 0,\n      \"source\": \"rgb\"\n    };\n    const bgColorText = `${backgroundColor.rgb.r},${backgroundColor.rgb.g},${backgroundColor.rgb.b},${backgroundColor.rgb.a}`;\n    let itemEntriesPayload = JSON.stringify([...itemEntries, {\n      itemId: Number(character.skin),\n      version: \"210.1.1\"\n    }, {\n      itemId: Number(character.skin) + 10000,\n      version: \"210.1.1\"\n    }]);\n    itemEntriesPayload = encodeURIComponent(itemEntriesPayload.substr(1, itemEntriesPayload.length - 2));\n    const link = `https://maplestory.io/api/Character/${itemEntriesPayload}/${character.action}/${character.animating ? 'animated' : character.frame}?showears=${character.mercEars}&showLefEars=${character.illiumEars}&showHighLefEars=${character.highFloraEars}&resize=${character.zoom}&name=${encodeURI(character.name || '')}&flipX=${character.flipX}` + (character.includeBackground ? `&bgColor=${bgColorText}` : '');\n\n    if (isSync) {\n      this.state.linkUsed = link;\n      axios.get(link).then(function (res) {\n        if (this.state.linkUsed == link) {\n          this.setState({\n            details: res.data\n          });\n        }\n      }.bind(this), this.showError.bind(this));\n    } else this.setState({\n      linkUsed: link\n    }, () => {\n      axios.get(link).then(function (res) {\n        if (this.state.linkUsed == link) {\n          this.setState({\n            details: res.data\n          });\n        }\n      }.bind(this), this.showError.bind(this));\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          character = _this$props.character,\n          onUpdateRenderablePosition = _this$props.onUpdateRenderablePosition,\n          onStart = _this$props.onStart,\n          onStop = _this$props.onStop,\n          onClick = _this$props.onClick,\n          selected = _this$props.selected;\n    const zoom = character.zoom;\n    const details = this.state.details;\n    const styling = {\n      transform: `translate(${character.position.x}px, ${character.position.y}px) translate(${details ? -0 : 0}px, ${details ? -0 : 0}px)`\n    };\n    const imgStyle = {\n      position: 'relative',\n      touchAction: 'none'\n    };\n    let itemEntries = Object.values(character.selectedItems).filter(item => item.id && (item.visible === undefined || item.visible)).map(item => {\n      let itemEntry = {\n        itemId: Number(item.id),\n        version: \"328\",\n        region: \"KMS\"\n      };\n      if (item.id >= 20000 && item.id < 30000 || item.id >= 1010000 && item.id < 1020000) itemEntry.animationName = character.emotion;\n      if (item.region && item.region.toLowerCase() != 'kms') itemEntry.region = item.region;\n      if (item.version && item.version.toLowerCase() != '328') itemEntry.version = item.version;\n      if (item.hue) itemEntry.hue = item.hue;\n      if (item.saturation != 1) itemEntry.saturation = item.saturation;\n      if (item.contrast != 1) itemEntry.contrast = item.contrast;\n      if (item.brightness != 1) itemEntry.brightness = item.brightness;\n      if (item.alpha != 1) itemEntry.alpha = item.alpha;\n      if (item.islot) itemEntry.islot = item.islot;\n      if (item.vslot) itemEntry.vslot = item.vslot;\n      return itemEntry;\n    });\n    console.log(itemEntries);\n    let backgroundColor = JSON.parse(localStorage['backgroundColor'] || false) || {\n      \"hsl\": {\n        \"h\": 0,\n        \"s\": 0,\n        \"l\": 0,\n        \"a\": 0\n      },\n      \"hex\": \"transparent\",\n      \"rgb\": {\n        \"r\": 0,\n        \"g\": 0,\n        \"b\": 0,\n        \"a\": 0\n      },\n      \"hsv\": {\n        \"h\": 0,\n        \"s\": 0,\n        \"v\": 0,\n        \"a\": 0\n      },\n      \"oldHue\": 0,\n      \"source\": \"rgb\"\n    };\n    const bgColorText = `${backgroundColor.rgb.r},${backgroundColor.rgb.g},${backgroundColor.rgb.b},${backgroundColor.rgb.a}`;\n    let itemEntriesPayload = JSON.stringify([...itemEntries, {\n      itemId: Number(character.skin),\n      version: \"210.1.1\"\n    }, {\n      itemId: Number(character.skin) + 10000,\n      version: \"210.1.1\"\n    }]);\n    itemEntriesPayload = encodeURIComponent(itemEntriesPayload.substr(1, itemEntriesPayload.length - 2));\n    const link = `https://maplestory.io/api/Character/${itemEntriesPayload}/${character.action}/${character.animating ? 'animated' : character.frame}?showears=${character.mercEars}&showLefEars=${character.illiumEars}&showHighLefEars=${character.highFloraEars}&resize=${character.zoom}&name=${encodeURI(character.name || '')}&flipX=${character.flipX}` + (character.includeBackground ? `&bgColor=${bgColorText}` : '');\n    return React.createElement(DraggableCore, {\n      onStart: onStart,\n      onStop: onStop,\n      onDrag: onUpdateRenderablePosition,\n      position: character.position,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: selected ? 'selected-canvas-element' : '',\n      style: styling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, details ? React.createElement(\"img\", {\n      src: link,\n      alt: \"\",\n      className: \"renderable-instance\",\n      draggable: false,\n      onClick: onClick,\n      onError: this.showError.bind(this),\n      style: imgStyle,\n      id: \"leftImg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"loading-character\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"\\xA0\")));\n  }\n\n  showError() {\n    setTimeout(function () {\n      if (this.state.tryCount < 10) {\n        setTimeout(function () {\n          this.setState({\n            tryCount: this.state.tryCount + 1\n          }, () => {\n            this.updateCharacterDetails(this.props);\n          });\n        }.bind(this), 1500);\n      }\n    }.bind(this), 3500);\n  }\n\n}\n\nexport default CharacterCanvasElement;","map":{"version":3,"sources":["C:/Users/19065019/react-test/src/components/RenderCanvas/CharacterCanvasElement/index.js"],"names":["React","Component","Draggable","DraggableCore","NotificationManager","axios","_","region","localStorage","version","CharacterCanvasElement","constructor","props","state","tryCount","updateCharacterDetails","componentDidUpdate","prevProps","ifChanged","find","property","character","isSync","itemsWithEmotion","values","selectedItems","filter","item","id","visible","undefined","map","itemEntry","emotion","itemEntries","Object","itemId","Number","animationName","toLowerCase","hue","saturation","contrast","brightness","alpha","islot","vslot","backgroundColor","JSON","parse","bgColorText","rgb","r","g","b","a","itemEntriesPayload","stringify","skin","encodeURIComponent","substr","length","link","action","animating","frame","mercEars","illiumEars","highFloraEars","zoom","encodeURI","name","flipX","includeBackground","linkUsed","get","then","res","setState","details","data","bind","showError","render","onUpdateRenderablePosition","onStart","onStop","onClick","selected","styling","transform","position","x","y","imgStyle","touchAction","console","log","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport Draggable, { DraggableCore } from 'react-draggable'\nimport { NotificationManager } from 'react-notifications'\nimport axios from 'axios'\nimport _ from 'lodash'\n\nconst region = !localStorage['region'] ? 'KMS' : localStorage['region']\nconst version = !localStorage['version'] ? '328' : localStorage['version']\n\nclass CharacterCanvasElement extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      tryCount: 0\n    }\n\n    this.updateCharacterDetails(props, true)\n  }\n\n  componentDidUpdate(prevProps) {\n    const ifChanged = ['skin', 'selectedItems', 'action', 'frame', 'mercEars', 'illiumEars', 'zoom', 'flipX']\n    if (_.find(ifChanged, (property) => this.props.character[property] != prevProps.character[property])){\n      this.updateCharacterDetails(this.props, false)\n    }\n  }\n\n  updateCharacterDetails(props, isSync) {\n    const { character } = props\n    const itemsWithEmotion = _.values(character.selectedItems)\n    .filter(item => item.id && (item.visible === undefined || item.visible))\n    .map(item => {\n      var itemEntry = item.id >= 20000 && item.id <= 29999 ? `${item.id}:${character.emotion}` : item.id\n      return itemEntry\n    });\n\n    const { tryCount } = this.state\n\n    let itemEntries = Object.values(character.selectedItems).filter(item => item.id && (item.visible === undefined || item.visible)).map(item => {\n      let itemEntry = {\n        itemId: Number(item.id),\n        version: \"328\",\n        region: \"KMS\"\n      }\n\n      if ((item.id >= 20000 && item.id < 30000) || (item.id >= 1010000 && item.id < 1020000)) itemEntry.animationName = character.emotion\n      if (item.region && item.region.toLowerCase() != 'kms') itemEntry.region = item.region\n      if (item.version && item.version.toLowerCase() != '328') itemEntry.version = item.version\n      if (item.hue) itemEntry.hue = item.hue\n      if (item.saturation != 1) itemEntry.saturation = item.saturation\n      if (item.contrast != 1) itemEntry.contrast = item.contrast\n      if (item.brightness != 1) itemEntry.brightness = item.brightness\n      if (item.alpha != 1) itemEntry.alpha = item.alpha\n      if (item.islot) itemEntry.islot = item.islot\n      if (item.vslot) itemEntry.vslot = item.vslot\n\n      return itemEntry\n    })\n\n    let backgroundColor = JSON.parse(localStorage['backgroundColor'] || false) || {\"hsl\":{\"h\":0,\"s\":0,\"l\":0,\"a\":0},\"hex\":\"transparent\",\"rgb\":{\"r\":0,\"g\":0,\"b\":0,\"a\":0},\"hsv\":{\"h\":0,\"s\":0,\"v\":0,\"a\":0},\"oldHue\":0,\"source\":\"rgb\"}\n    const bgColorText = `${backgroundColor.rgb.r},${backgroundColor.rgb.g},${backgroundColor.rgb.b},${backgroundColor.rgb.a}`\n\n    let itemEntriesPayload = JSON.stringify([\n      ...itemEntries,\n      { itemId: Number(character.skin), version: \"210.1.1\"},\n      { itemId: Number(character.skin) + 10000, version: \"210.1.1\"}\n    ])\n    itemEntriesPayload = encodeURIComponent(itemEntriesPayload.substr(1, itemEntriesPayload.length - 2))\n\n    const link = `https://maplestory.io/api/Character/${itemEntriesPayload}/${character.action}/${character.animating ? 'animated' : character.frame}?showears=${character.mercEars}&showLefEars=${character.illiumEars}&showHighLefEars=${character.highFloraEars}&resize=${character.zoom}&name=${encodeURI(character.name || '')}&flipX=${character.flipX}` + (character.includeBackground ? `&bgColor=${bgColorText}` : '')\n\n    if (isSync) {\n      this.state.linkUsed = link\n      axios.get(link).then(function(res) {\n        if (this.state.linkUsed == link) {\n          this.setState({\n            details: res.data\n          })\n        }\n      }.bind(this), this.showError.bind(this))\n    } else this.setState({ linkUsed: link }, () => {\n      axios.get(link).then(function(res) {\n        if (this.state.linkUsed == link) {\n          this.setState({\n            details: res.data\n          })\n        }\n      }.bind(this), this.showError.bind(this))\n    })\n  }\n\n  render() {\n    const { character, onUpdateRenderablePosition, onStart, onStop, onClick, selected } = this.props\n    const { zoom } = character\n    const { details } = this.state\n    const styling = {\n      transform: `translate(${character.position.x}px, ${character.position.y}px) translate(${details ? -0 : 0}px, ${details ? -0 : 0}px)`\n    }\n\n    const imgStyle = {\n      position: 'relative',\n      touchAction: 'none'\n    }\n\n    let itemEntries = Object.values(character.selectedItems).filter(item => item.id && (item.visible === undefined || item.visible)).map(item => {\n      let itemEntry = {\n        itemId: Number(item.id),\n        version: \"328\",\n        region: \"KMS\"\n      }\n\n      if ((item.id >= 20000 && item.id < 30000) || (item.id >= 1010000 && item.id < 1020000)) itemEntry.animationName = character.emotion\n      if (item.region && item.region.toLowerCase() != 'kms') itemEntry.region = item.region\n      if (item.version && item.version.toLowerCase() != '328') itemEntry.version = item.version\n      if (item.hue) itemEntry.hue = item.hue\n      if (item.saturation != 1) itemEntry.saturation = item.saturation\n      if (item.contrast != 1) itemEntry.contrast = item.contrast\n      if (item.brightness != 1) itemEntry.brightness = item.brightness\n      if (item.alpha != 1) itemEntry.alpha = item.alpha\n      if (item.islot) itemEntry.islot = item.islot\n      if (item.vslot) itemEntry.vslot = item.vslot\n\n      return itemEntry\n    })\nconsole.log(itemEntries);\n    let backgroundColor = JSON.parse(localStorage['backgroundColor'] || false) || {\"hsl\":{\"h\":0,\"s\":0,\"l\":0,\"a\":0},\"hex\":\"transparent\",\"rgb\":{\"r\":0,\"g\":0,\"b\":0,\"a\":0},\"hsv\":{\"h\":0,\"s\":0,\"v\":0,\"a\":0},\"oldHue\":0,\"source\":\"rgb\"}\n    const bgColorText = `${backgroundColor.rgb.r},${backgroundColor.rgb.g},${backgroundColor.rgb.b},${backgroundColor.rgb.a}`\n\n    let itemEntriesPayload = JSON.stringify([\n      ...itemEntries,\n      { itemId: Number(character.skin), version: \"210.1.1\" },\n      { itemId: Number(character.skin) + 10000, version: \"210.1.1\"}\n    ])\n    itemEntriesPayload = encodeURIComponent(itemEntriesPayload.substr(1, itemEntriesPayload.length - 2))\n\n    const link = `https://maplestory.io/api/Character/${itemEntriesPayload}/${character.action}/${character.animating ? 'animated' : character.frame}?showears=${character.mercEars}&showLefEars=${character.illiumEars}&showHighLefEars=${character.highFloraEars}&resize=${character.zoom}&name=${encodeURI(character.name || '')}&flipX=${character.flipX}` + (character.includeBackground ? `&bgColor=${bgColorText}` : '')\n\n    return (\n      <DraggableCore\n        onStart={onStart}\n        onStop={onStop}\n        onDrag={onUpdateRenderablePosition}\n        position={character.position}\n        >\n        <div className={selected ? 'selected-canvas-element' : ''} style={styling}>\n         {\n            details ? (<img\n              src={link}\n              alt=''\n              className='renderable-instance'\n              draggable={false}\n              onClick={onClick}\n              onError={this.showError.bind(this)}\n              style={imgStyle}\n              id=\"leftImg\"\n              />) : <div className='loading-character'>&nbsp;</div>\n         }\n        </div>\n        </DraggableCore>\n    )\n  }\n\n  showError() {\n    setTimeout(function () {\n      if (this.state.tryCount < 10) {\n        setTimeout(function () {\n          this.setState({ tryCount: this.state.tryCount + 1 }, () => {\n            this.updateCharacterDetails(this.props)\n          })\n        }.bind(this), 1500)\n      }\n    }.bind(this), 3500)\n  }\n}\n\nexport default CharacterCanvasElement\n"]},"metadata":{},"sourceType":"module"}