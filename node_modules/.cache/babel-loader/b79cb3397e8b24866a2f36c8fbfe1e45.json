{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\19065019\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\19065019\\\\react-test\\\\src\\\\components\\\\CharacterList\\\\index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport PlayerCanvas from '../PlayerCanvas';\nimport ItemListing from '../ItemListing';\nimport EquippedItems from '../EquippedItems';\nimport CharacterProperties from '../CharacterProperties';\nimport _ from 'lodash';\nimport IntroModal from '../IntroModal';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let isOpen = (localStorage || {})['hideModal'] !== 'true';\n    if (isOpen === '' || isOpen === undefined || isOpen === 'undefined') isOpen = true;\n    this.state = {\n      selectedItems: JSON.parse((localStorage || [])['selectedItems'] || '{}'),\n      action: 'stand1',\n      emotion: 'default',\n      skin: Number(localStorage['skin']) || 2000,\n      isModalOpen: isOpen,\n      mercEars: localStorage['mercEars'] == \"true\" || localStorage['mercEars'] === true\n    }; //this.updateBannerAdBlur()\n  }\n  /*updateBannerAdBlur() {\n    const topAd = document.getElementById(\"top-banner-ad\")\n    topAd.className = this.state.isModalOpen ? \"modal-blur\" : \"\";\n  }*/\n\n\n  render() {\n    const _this$state = this.state,\n          selectedItems = _this$state.selectedItems,\n          action = _this$state.action,\n          emotion = _this$state.emotion,\n          skin = _this$state.skin,\n          isModalOpen = _this$state.isModalOpen,\n          mercEars = _this$state.mercEars; //this.updateBannerAdBlur()\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(PlayerCanvas, {\n      selectedItems: _.values(selectedItems).map(item => item.Id),\n      action: action,\n      emotion: emotion,\n      skin: skin,\n      mercEars: mercEars,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(CharacterProperties, {\n      equippedItems: selectedItems,\n      action: action,\n      emotion: emotion,\n      skin: skin,\n      mercEars: mercEars,\n      onChangeAction: this.userChangedAction.bind(this),\n      onChangeEmotion: this.userChangedEmotion.bind(this),\n      onChangeSkin: this.userChangedSkin.bind(this),\n      onChangeMercEars: this.userChangedMercEars.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n  setModalOpen(isModalOpen) {\n    this.setState({\n      isModalOpen\n    });\n  }\n\n  userChangedMercEars(mercEars) {\n    this.setState({\n      mercEars\n    });\n    localStorage['mercEars'] = mercEars;\n  }\n\n  userChangedSkin(skin) {\n    this.setState({\n      skin\n    });\n    localStorage['skin'] = skin;\n  }\n\n  userChangedEmotion(emotion) {\n    this.setState({\n      emotion\n    });\n    console.log('Changed emotion: ', emotion);\n  }\n\n  userChangedAction(action) {\n    this.setState({\n      action\n    });\n    console.log('Changed action: ', action);\n  }\n\n  userSelectedItem(item) {\n    let selectedItems = _objectSpread({}, this.state.selectedItems);\n\n    if (item.TypeInfo.SubCategory === 'Overall') {\n      delete selectedItems['Top'];\n      delete selectedItems['Bottom'];\n    }\n\n    if (item.similar) {\n      item = _objectSpread({}, item);\n      delete item['similar'];\n    }\n\n    selectedItems[item.TypeInfo.SubCategory] = item;\n    this.updateItems(selectedItems);\n  }\n\n  userRemovedItem(item) {\n    let selectedItems = _objectSpread({}, this.state.selectedItems);\n\n    delete selectedItems[item.TypeInfo.SubCategory];\n    this.updateItems(selectedItems);\n  }\n\n  userRemovedItems() {\n    let selectedItems = {};\n    this.updateItems(selectedItems);\n  }\n\n  updateItems(selectedItems) {\n    console.log('New Items: ', selectedItems);\n    this.setState({\n      selectedItems\n    });\n    localStorage['selectedItems'] = JSON.stringify(selectedItems);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/19065019/react-test/src/components/CharacterList/index.js"],"names":["React","Component","PlayerCanvas","ItemListing","EquippedItems","CharacterProperties","_","IntroModal","App","constructor","props","isOpen","localStorage","undefined","state","selectedItems","JSON","parse","action","emotion","skin","Number","isModalOpen","mercEars","render","values","map","item","Id","userChangedAction","bind","userChangedEmotion","userChangedSkin","userChangedMercEars","setModalOpen","setState","console","log","userSelectedItem","TypeInfo","SubCategory","similar","updateItems","userRemovedItem","userRemovedItems","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport PlayerCanvas from '../PlayerCanvas'\nimport ItemListing from '../ItemListing'\nimport EquippedItems from '../EquippedItems'\nimport CharacterProperties from '../CharacterProperties'\nimport _ from 'lodash'\nimport IntroModal from '../IntroModal'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    let isOpen = (localStorage || {})['hideModal'] !== 'true'\n    if (isOpen === '' || isOpen === undefined || isOpen === 'undefined')\n      isOpen = true\n\n    this.state = {\n      selectedItems: JSON.parse((localStorage || [])['selectedItems'] || '{}'),\n      action: 'stand1',\n      emotion: 'default',\n      skin: Number(localStorage['skin']) || 2000,\n      isModalOpen: isOpen,\n      mercEars: localStorage['mercEars'] == \"true\" || localStorage['mercEars'] === true\n    }\n\n    //this.updateBannerAdBlur()\n  }\n\n  /*updateBannerAdBlur() {\n    const topAd = document.getElementById(\"top-banner-ad\")\n    topAd.className = this.state.isModalOpen ? \"modal-blur\" : \"\";\n  }*/\n\n  render() {\n    const { selectedItems, action, emotion, skin, isModalOpen, mercEars } = this.state\n    //this.updateBannerAdBlur()\n\n    return (\n      <div className={\"App\"}>\n        <PlayerCanvas\n          selectedItems={_.values(selectedItems).map(item => item.Id)}\n          action={action}\n          emotion={emotion}\n          skin={skin}\n          mercEars={mercEars} />\n\n\n        <CharacterProperties\n          equippedItems={selectedItems}\n          action={action}\n          emotion={emotion}\n          skin={skin}\n          mercEars={mercEars}\n          onChangeAction={this.userChangedAction.bind(this)}\n          onChangeEmotion={this.userChangedEmotion.bind(this)}\n          onChangeSkin={this.userChangedSkin.bind(this)}\n          onChangeMercEars={this.userChangedMercEars.bind(this)} />\n\n      </div>\n    )\n  }\n\n  setModalOpen (isModalOpen) {\n    this.setState({ isModalOpen })\n  }\n\n  userChangedMercEars(mercEars) {\n    this.setState({ mercEars });\n    localStorage['mercEars'] = mercEars;\n  }\n\n  userChangedSkin (skin) {\n    this.setState({ skin })\n    localStorage['skin'] = skin\n  }\n\n  userChangedEmotion (emotion) {\n    this.setState({ emotion })\n    console.log('Changed emotion: ', emotion)\n  }\n\n  userChangedAction (action) {\n    this.setState({ action })\n    console.log('Changed action: ', action)\n  }\n\n  userSelectedItem (item) {\n    let selectedItems = {\n      ...this.state.selectedItems,\n    }\n\n    if (item.TypeInfo.SubCategory === 'Overall') {\n      delete selectedItems['Top']\n      delete selectedItems['Bottom']\n    }\n\n    if (item.similar) {\n      item = { ...item }\n      delete item['similar']\n    }\n\n    selectedItems[item.TypeInfo.SubCategory] = item\n    this.updateItems(selectedItems)\n  }\n\n  userRemovedItem (item) {\n    let selectedItems = {\n      ...this.state.selectedItems,\n    }\n    delete selectedItems[item.TypeInfo.SubCategory]\n    this.updateItems(selectedItems);\n  }\n\n  userRemovedItems () {\n    let selectedItems = {}\n    this.updateItems(selectedItems);\n  }\n\n  updateItems (selectedItems) {\n    console.log('New Items: ', selectedItems)\n    this.setState({\n      selectedItems\n    })\n\n    localStorage['selectedItems'] = JSON.stringify(selectedItems)\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}