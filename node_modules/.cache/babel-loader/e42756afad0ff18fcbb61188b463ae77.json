{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar index_1 = require(\"./index\");\n\nvar NavGroup_1 = require(\"./NavGroup\");\n\nvar types_1 = require(\"./types\");\n\nvar PATH_SEPARATOR = '|';\nexports.NavContext = React.createContext(null);\n\nvar splitPath = function (path) {\n  if (path) {\n    return path.split(PATH_SEPARATOR);\n  }\n\n  return [];\n};\n\nvar isSelectedPath = function (contextPath, selection) {\n  var ourPath = splitPath(contextPath);\n  var selectionPath = splitPath(selection);\n\n  if (selectionPath.length === 0 || selectionPath.length !== ourPath.length) {\n    return false;\n  }\n\n  for (var i = 0; i < selectionPath.length; i++) {\n    if (selectionPath[i] !== ourPath[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSelected = function (context, parentContext, id) {\n  var selectionPath = context ? context.selectedPath : '';\n  var parentPathId = parentContext ? \"\" + parentContext.pathId : undefined;\n  var result = isSelectedPath(parentPathId ? \"\" + parentPathId + PATH_SEPARATOR + id : id, selectionPath);\n  return result;\n};\n\nvar createPathId = function (context, id) {\n  if (context) {\n    return \"\" + context.pathId + PATH_SEPARATOR + id;\n  }\n\n  return id;\n};\n\nfunction hasNavChildren(props) {\n  var children = React.Children.toArray(props.children);\n\n  for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n    var childEl = children_1[_i];\n    var child = childEl;\n\n    if (child.type === exports.Nav) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.Nav = function (props) {\n  var context = React.useContext(index_1.SideNavContext);\n  var contextAction = React.useContext(index_1.SideNavActionContext);\n  var parentNavContext = React.useContext(exports.NavContext);\n  var selected = isSelected(context, parentNavContext, props.id);\n  var pathId = createPathId(parentNavContext, props.id);\n  var level = pathId.split(PATH_SEPARATOR).length;\n  var hasNavAsChildren = hasNavChildren(props);\n  var isLeaf = !hasNavAsChildren;\n\n  var onClick = function (e) {\n    if (context.mode === types_1.ViewMode.normal) {\n      e.stopPropagation();\n    }\n\n    contextAction.onSelectionPathSelected(pathId, {\n      id: props.id,\n      isLeaf: isLeaf,\n      payload: props.payload,\n      level: level\n    });\n  };\n\n  var elementToCreate = isLeaf ? 'div' : NavGroup_1.NavGroup;\n  var containerProps = {\n    'data-level': \"\" + level,\n    'data-isleaf': \"\" + isLeaf,\n    'data-id': \"\" + props.id,\n    'data-pathid': \"\" + pathId,\n    'data-testid': \"\" + pathId,\n    children: props.children,\n    onClick: onClick\n  };\n\n  if (isLeaf) {\n    containerProps['data-selected'] = selected;\n  }\n\n  return React.createElement(exports.NavContext.Provider, {\n    value: {\n      selected: selected,\n      id: props.id,\n      pathId: pathId,\n      level: level,\n      isLeaf: isLeaf\n    }\n  }, React.createElement(elementToCreate, containerProps));\n};","map":{"version":3,"sources":["C:/Users/19065019/react-test/node_modules/react-sidenav/Nav.js"],"names":["Object","defineProperty","exports","value","React","require","index_1","NavGroup_1","types_1","PATH_SEPARATOR","NavContext","createContext","splitPath","path","split","isSelectedPath","contextPath","selection","ourPath","selectionPath","length","i","isSelected","context","parentContext","id","selectedPath","parentPathId","pathId","undefined","result","createPathId","hasNavChildren","props","children","Children","toArray","_i","children_1","childEl","child","type","Nav","useContext","SideNavContext","contextAction","SideNavActionContext","parentNavContext","selected","level","hasNavAsChildren","isLeaf","onClick","e","mode","ViewMode","normal","stopPropagation","onSelectionPathSelected","payload","elementToCreate","NavGroup","containerProps","createElement","Provider"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar index_1 = require(\"./index\");\nvar NavGroup_1 = require(\"./NavGroup\");\nvar types_1 = require(\"./types\");\nvar PATH_SEPARATOR = '|';\nexports.NavContext = React.createContext(null);\nvar splitPath = function (path) {\n    if (path) {\n        return path.split(PATH_SEPARATOR);\n    }\n    return [];\n};\nvar isSelectedPath = function (contextPath, selection) {\n    var ourPath = splitPath(contextPath);\n    var selectionPath = splitPath(selection);\n    if (selectionPath.length === 0 || selectionPath.length !== ourPath.length) {\n        return false;\n    }\n    for (var i = 0; i < selectionPath.length; i++) {\n        if (selectionPath[i] !== ourPath[i]) {\n            return false;\n        }\n    }\n    return true;\n};\nvar isSelected = function (context, parentContext, id) {\n    var selectionPath = context ? context.selectedPath : '';\n    var parentPathId = parentContext ? \"\" + parentContext.pathId : undefined;\n    var result = isSelectedPath(parentPathId ? \"\" + parentPathId + PATH_SEPARATOR + id : id, selectionPath);\n    return result;\n};\nvar createPathId = function (context, id) {\n    if (context) {\n        return \"\" + context.pathId + PATH_SEPARATOR + id;\n    }\n    return id;\n};\nfunction hasNavChildren(props) {\n    var children = React.Children.toArray(props.children);\n    for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n        var childEl = children_1[_i];\n        var child = childEl;\n        if (child.type === exports.Nav) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.Nav = function (props) {\n    var context = React.useContext(index_1.SideNavContext);\n    var contextAction = React.useContext(index_1.SideNavActionContext);\n    var parentNavContext = React.useContext(exports.NavContext);\n    var selected = isSelected(context, parentNavContext, props.id);\n    var pathId = createPathId(parentNavContext, props.id);\n    var level = pathId.split(PATH_SEPARATOR).length;\n    var hasNavAsChildren = hasNavChildren(props);\n    var isLeaf = !hasNavAsChildren;\n    var onClick = function (e) {\n        if (context.mode === types_1.ViewMode.normal) {\n            e.stopPropagation();\n        }\n        contextAction.onSelectionPathSelected(pathId, { id: props.id, isLeaf: isLeaf, payload: props.payload, level: level });\n    };\n    var elementToCreate = isLeaf ? 'div' : NavGroup_1.NavGroup;\n    var containerProps = {\n        'data-level': \"\" + level,\n        'data-isleaf': \"\" + isLeaf,\n        'data-id': \"\" + props.id,\n        'data-pathid': \"\" + pathId,\n        'data-testid': \"\" + pathId,\n        children: props.children,\n        onClick: onClick\n    };\n    if (isLeaf) {\n        containerProps['data-selected'] = selected;\n    }\n    return (React.createElement(exports.NavContext.Provider, { value: {\n            selected: selected,\n            id: props.id,\n            pathId: pathId,\n            level: level,\n            isLeaf: isLeaf\n        } }, React.createElement(elementToCreate, containerProps)));\n};\n"]},"metadata":{},"sourceType":"script"}