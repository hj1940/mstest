{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19065019\\\\react-test\\\\src\\\\components\\\\CharacterList\\\\index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport _ from 'lodash';\nimport Toggle from 'react-toggle';\nimport { Tooltip } from 'react-tippy';\nimport CharacterEntry from './CharacterEntry';\nimport PetEntry from './PetEntry';\n\nclass CharacterList extends Component {\n  render() {\n    const _this$props = this.props,\n          renderables = _this$props.renderables,\n          selectedIndex = _this$props.selectedIndex,\n          localized = _this$props.localized;\n    return React.createElement(\"div\", {\n      className: \"character-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, renderables.map((c, i) => {\n      if (c.type === undefined || c.type == 'character') {\n        return React.createElement(CharacterEntry, {\n          character: c,\n          isSelected: i == selectedIndex,\n          onClick: this.clickCharacter.bind(this, c),\n          onUpdateCharacter: this.props.onUpdateCharacter,\n          key: 'character' + i,\n          localized: localized,\n          onClone: this.props.onCloneCharacter,\n          onDeleteCharacter: this.props.onDeleteCharacter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      } else if (c.type == 'pet') {\n        return React.createElement(PetEntry, {\n          pet: c,\n          isSelected: i == selectedIndex,\n          key: 'pet' + i,\n          localized: localized,\n          onClick: this.clickCharacter.bind(this, c),\n          onUpdatePet: this.props.onUpdatePet,\n          onDeletePet: this.props.onDeletePet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      }\n    }), React.createElement(Tooltip, {\n      html: this.renderAddList(),\n      position: \"top\",\n      theme: \"light\",\n      title: \"Create a new..\",\n      interactive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"+\"))), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"importFile\",\n      style: {\n        display: 'none'\n      },\n      onChange: this.props.onImportCharacter.bind(this),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n  renderAddList() {\n    return React.createElement(\"ul\", {\n      className: \"add-possible\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"add-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Create a new..\"), React.createElement(\"li\", {\n      className: \"clickable\",\n      onClick: this.props.onAddCharacter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.localized.character), React.createElement(\"li\", {\n      className: \"clickable\",\n      onClick: this.props.onAddPet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.localized.pet), React.createElement(\"li\", {\n      className: \"clickable bold\",\n      onClick: this.onOpenImportCharacter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.localized.importCharacter));\n  }\n\n  onOpenImportCharacter() {\n    document.getElementById('importFile').click();\n  }\n\n  clickCharacter(character, e) {\n    if (e.target == e.currentTarget) this.props.onUpdateSelectedCharacter(character);\n  }\n\n}\n\nexport default CharacterList;","map":{"version":3,"sources":["C:/Users/19065019/react-test/src/components/CharacterList/index.js"],"names":["React","Component","_","Toggle","Tooltip","CharacterEntry","PetEntry","CharacterList","render","props","renderables","selectedIndex","localized","map","c","i","type","undefined","clickCharacter","bind","onUpdateCharacter","onCloneCharacter","onDeleteCharacter","onUpdatePet","onDeletePet","renderAddList","display","onImportCharacter","onAddCharacter","character","onAddPet","pet","onOpenImportCharacter","importCharacter","document","getElementById","click","e","target","currentTarget","onUpdateSelectedCharacter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport _ from 'lodash'\nimport Toggle from 'react-toggle'\nimport { Tooltip } from 'react-tippy'\nimport CharacterEntry from './CharacterEntry'\nimport PetEntry from './PetEntry'\n\nclass CharacterList extends Component {\n  render() {\n    const { renderables, selectedIndex, localized } = this.props\n    return (\n      <div className='character-list'>\n        <div>\n          {renderables.map((c, i) => {\n            if (c.type === undefined || c.type == 'character') {\n              return (<CharacterEntry\n                character={c}\n                isSelected={i == selectedIndex}\n                onClick={this.clickCharacter.bind(this, c)}\n                onUpdateCharacter={this.props.onUpdateCharacter}\n                key={'character' + i}\n                localized={localized}\n                onClone={this.props.onCloneCharacter}\n                onDeleteCharacter={this.props.onDeleteCharacter} />)\n            } else if (c.type == 'pet') {\n              return (<PetEntry\n                  pet={c}\n                  isSelected={i == selectedIndex}\n                  key={'pet' + i}\n                  localized={localized}\n                  onClick={this.clickCharacter.bind(this, c)}\n                  onUpdatePet={this.props.onUpdatePet}\n                  onDeletePet={this.props.onDeletePet}\n                />);\n            }\n          })}\n          <Tooltip html={this.renderAddList()} position='top' theme='light' title=\"Create a new..\" interactive={true}>\n            <div className='add'><span>+</span>\n          </div></Tooltip>\n          <input type='file' id='importFile' style={{display: 'none'}} onChange={this.props.onImportCharacter.bind(this)} multiple />\n        </div>\n      </div>\n    )\n  }\n\n  renderAddList() {\n    return (<ul className='add-possible'>\n      <li className='add-title'>Create a new..</li>\n      <li className='clickable' onClick={this.props.onAddCharacter}>{this.props.localized.character}</li>\n      <li className='clickable' onClick={this.props.onAddPet}>{this.props.localized.pet}</li>\n      <li className='clickable bold' onClick={this.onOpenImportCharacter}>{this.props.localized.importCharacter}</li>\n    </ul>);\n  }\n\n  onOpenImportCharacter() {\n    document.getElementById('importFile').click()\n  }\n\n  clickCharacter(character, e) {\n    if (e.target == e.currentTarget)\n      this.props.onUpdateSelectedCharacter(character)\n  }\n}\n\nexport default CharacterList\n"]},"metadata":{},"sourceType":"module"}