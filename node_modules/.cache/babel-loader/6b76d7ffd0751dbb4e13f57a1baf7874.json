{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createFilterOptions;\n\nvar _jsSearch = require('js-search');\n\nfunction createFilterOptions(_ref) {\n  var indexes = _ref.indexes,\n      indexStrategy = _ref.indexStrategy,\n      _ref$labelKey = _ref.labelKey,\n      labelKey = _ref$labelKey === undefined ? 'label' : _ref$labelKey,\n      _ref$options = _ref.options,\n      options = _ref$options === undefined ? [] : _ref$options,\n      sanitizer = _ref.sanitizer,\n      searchIndex = _ref.searchIndex,\n      tokenizer = _ref.tokenizer,\n      _ref$valueKey = _ref.valueKey,\n      valueKey = _ref$valueKey === undefined ? 'value' : _ref$valueKey;\n  var search = new _jsSearch.Search(valueKey);\n  search.searchIndex = searchIndex || new _jsSearch.UnorderedSearchIndex();\n  search.indexStrategy = indexStrategy || new _jsSearch.AllSubstringsIndexStrategy();\n\n  if (sanitizer) {\n    search.sanitizer = sanitizer;\n  }\n\n  if (tokenizer) {\n    search.tokenizer = tokenizer;\n  }\n\n  if (indexes) {\n    indexes.forEach(function (index) {\n      search.addIndex(index);\n    });\n  } else {\n    search.addIndex(labelKey);\n  }\n\n  search.addDocuments(options); // See https://github.com/JedWatson/react-select/blob/e19bce383a8fd1694278de47b6d00a608ea99f2d/src/Select.js#L830\n  // See https://github.com/JedWatson/react-select#advanced-filters\n\n  return function filterOptions(options, filter, selectedOptions) {\n    var filtered = filter ? search.search(filter) : options;\n\n    if (Array.isArray(selectedOptions) && selectedOptions.length) {\n      var selectedValues = selectedOptions.map(function (option) {\n        return option[valueKey];\n      });\n      return filtered.filter(function (option) {\n        return !selectedValues.includes(option[valueKey]);\n      });\n    }\n\n    return filtered;\n  };\n}","map":{"version":3,"sources":["C:/Users/19065019/react-test/node_modules/react-select-fast-filter-options/dist/commonjs/index.js"],"names":["Object","defineProperty","exports","value","default","createFilterOptions","_jsSearch","require","_ref","indexes","indexStrategy","_ref$labelKey","labelKey","undefined","_ref$options","options","sanitizer","searchIndex","tokenizer","_ref$valueKey","valueKey","search","Search","UnorderedSearchIndex","AllSubstringsIndexStrategy","forEach","index","addIndex","addDocuments","filterOptions","filter","selectedOptions","filtered","Array","isArray","length","selectedValues","map","option","includes"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,mBAAlB;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASF,mBAAT,CAA6BG,IAA7B,EAAmC;AACjC,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AAAA,MACIC,aAAa,GAAGF,IAAI,CAACE,aADzB;AAAA,MAEIC,aAAa,GAAGH,IAAI,CAACI,QAFzB;AAAA,MAGIA,QAAQ,GAAGD,aAAa,KAAKE,SAAlB,GAA8B,OAA9B,GAAwCF,aAHvD;AAAA,MAIIG,YAAY,GAAGN,IAAI,CAACO,OAJxB;AAAA,MAKIA,OAAO,GAAGD,YAAY,KAAKD,SAAjB,GAA6B,EAA7B,GAAkCC,YALhD;AAAA,MAMIE,SAAS,GAAGR,IAAI,CAACQ,SANrB;AAAA,MAOIC,WAAW,GAAGT,IAAI,CAACS,WAPvB;AAAA,MAQIC,SAAS,GAAGV,IAAI,CAACU,SARrB;AAAA,MASIC,aAAa,GAAGX,IAAI,CAACY,QATzB;AAAA,MAUIA,QAAQ,GAAGD,aAAa,KAAKN,SAAlB,GAA8B,OAA9B,GAAwCM,aAVvD;AAYA,MAAIE,MAAM,GAAG,IAAIf,SAAS,CAACgB,MAAd,CAAqBF,QAArB,CAAb;AACAC,EAAAA,MAAM,CAACJ,WAAP,GAAqBA,WAAW,IAAI,IAAIX,SAAS,CAACiB,oBAAd,EAApC;AACAF,EAAAA,MAAM,CAACX,aAAP,GAAuBA,aAAa,IAAI,IAAIJ,SAAS,CAACkB,0BAAd,EAAxC;;AAEA,MAAIR,SAAJ,EAAe;AACbK,IAAAA,MAAM,CAACL,SAAP,GAAmBA,SAAnB;AACD;;AAED,MAAIE,SAAJ,EAAe;AACbG,IAAAA,MAAM,CAACH,SAAP,GAAmBA,SAAnB;AACD;;AAED,MAAIT,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACgB,OAAR,CAAgB,UAAUC,KAAV,EAAiB;AAC/BL,MAAAA,MAAM,CAACM,QAAP,CAAgBD,KAAhB;AACD,KAFD;AAGD,GAJD,MAIO;AACLL,IAAAA,MAAM,CAACM,QAAP,CAAgBf,QAAhB;AACD;;AAEDS,EAAAA,MAAM,CAACO,YAAP,CAAoBb,OAApB,EAjCiC,CAmCjC;AACA;;AACA,SAAO,SAASc,aAAT,CAAuBd,OAAvB,EAAgCe,MAAhC,EAAwCC,eAAxC,EAAyD;AAC9D,QAAIC,QAAQ,GAAGF,MAAM,GAAGT,MAAM,CAACA,MAAP,CAAcS,MAAd,CAAH,GAA2Bf,OAAhD;;AAEA,QAAIkB,KAAK,CAACC,OAAN,CAAcH,eAAd,KAAkCA,eAAe,CAACI,MAAtD,EAA8D;AAC5D,UAAIC,cAAc,GAAGL,eAAe,CAACM,GAAhB,CAAoB,UAAUC,MAAV,EAAkB;AACzD,eAAOA,MAAM,CAAClB,QAAD,CAAb;AACD,OAFoB,CAArB;AAIA,aAAOY,QAAQ,CAACF,MAAT,CAAgB,UAAUQ,MAAV,EAAkB;AACvC,eAAO,CAACF,cAAc,CAACG,QAAf,CAAwBD,MAAM,CAAClB,QAAD,CAA9B,CAAR;AACD,OAFM,CAAP;AAGD;;AAED,WAAOY,QAAP;AACD,GAdD;AAeD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createFilterOptions;\n\nvar _jsSearch = require('js-search');\n\nfunction createFilterOptions(_ref) {\n  var indexes = _ref.indexes,\n      indexStrategy = _ref.indexStrategy,\n      _ref$labelKey = _ref.labelKey,\n      labelKey = _ref$labelKey === undefined ? 'label' : _ref$labelKey,\n      _ref$options = _ref.options,\n      options = _ref$options === undefined ? [] : _ref$options,\n      sanitizer = _ref.sanitizer,\n      searchIndex = _ref.searchIndex,\n      tokenizer = _ref.tokenizer,\n      _ref$valueKey = _ref.valueKey,\n      valueKey = _ref$valueKey === undefined ? 'value' : _ref$valueKey;\n\n  var search = new _jsSearch.Search(valueKey);\n  search.searchIndex = searchIndex || new _jsSearch.UnorderedSearchIndex();\n  search.indexStrategy = indexStrategy || new _jsSearch.AllSubstringsIndexStrategy();\n\n  if (sanitizer) {\n    search.sanitizer = sanitizer;\n  }\n\n  if (tokenizer) {\n    search.tokenizer = tokenizer;\n  }\n\n  if (indexes) {\n    indexes.forEach(function (index) {\n      search.addIndex(index);\n    });\n  } else {\n    search.addIndex(labelKey);\n  }\n\n  search.addDocuments(options);\n\n  // See https://github.com/JedWatson/react-select/blob/e19bce383a8fd1694278de47b6d00a608ea99f2d/src/Select.js#L830\n  // See https://github.com/JedWatson/react-select#advanced-filters\n  return function filterOptions(options, filter, selectedOptions) {\n    var filtered = filter ? search.search(filter) : options;\n\n    if (Array.isArray(selectedOptions) && selectedOptions.length) {\n      var selectedValues = selectedOptions.map(function (option) {\n        return option[valueKey];\n      });\n\n      return filtered.filter(function (option) {\n        return !selectedValues.includes(option[valueKey]);\n      });\n    }\n\n    return filtered;\n  };\n}"]},"metadata":{},"sourceType":"script"}