{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19065019\\\\react-test\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker, { unregister } from './registerServiceWorker';\nimport './index.css';\n\nwindow.generateAvatarLink = function (character, linkType) {\n  let itemEntries = Object.values(character.selectedItems).filter(item => item.id && (item.visible === undefined || item.visible)).map(item => {\n    let itemEntry = {\n      itemId: Number(item.id)\n    };\n    if (item.id >= 20000 && item.id < 30000 || item.id >= 1010000 && item.id < 1020000) itemEntry.animationName = character.emotion;\n    if (item.region && item.region.toLowerCase() != 'gms') itemEntry.region = item.region;\n    if (item.version && item.version.toLowerCase() != 'latest') itemEntry.version = item.version;\n    if (item.hue) itemEntry.hue = item.hue;\n    if (item.saturation != 1) itemEntry.saturation = item.saturation;\n    if (item.contrast != 1) itemEntry.contrast = item.contrast;\n    if (item.brightness != 1) itemEntry.brightness = item.brightness;\n    if (item.alpha != 1) itemEntry.alpha = item.alpha;\n    if (item.islot) itemEntry.islot = item.islot;\n    if (item.vslot) itemEntry.vslot = item.vslot;\n    return itemEntry;\n  });\n  let backgroundColor = JSON.parse(localStorage['backgroundColor'] || false) || {\n    \"hsl\": {\n      \"h\": 0,\n      \"s\": 0,\n      \"l\": 0,\n      \"a\": 0\n    },\n    \"hex\": \"transparent\",\n    \"rgb\": {\n      \"r\": 0,\n      \"g\": 0,\n      \"b\": 0,\n      \"a\": 0\n    },\n    \"hsv\": {\n      \"h\": 0,\n      \"s\": 0,\n      \"v\": 0,\n      \"a\": 0\n    },\n    \"oldHue\": 0,\n    \"source\": \"rgb\"\n  };\n  const bgColorText = `${backgroundColor.rgb.r},${backgroundColor.rgb.g},${backgroundColor.rgb.b},${backgroundColor.rgb.a}`;\n  let itemEntriesPayload = JSON.stringify([...itemEntries, {\n    itemId: Number(character.skin),\n    region: localStorage['region'],\n    version: localStorage['version']\n  }, {\n    itemId: Number(character.skin) + 10000,\n    region: localStorage['region'],\n    version: localStorage['version']\n  }]);\n  itemEntriesPayload = encodeURIComponent(itemEntriesPayload.substr(1, itemEntriesPayload.length - 2));\n  return `https://maplestory.io/api/KMS/latest/character/${itemEntriesPayload}/${linkType ? linkType : `${character.action}/${character.frame}`}?showears=${character.mercEars}&showLefEars=${character.illiumEars}&showHighLefEars=${character.highFloraEars}&resize=${character.zoom}&name=${encodeURI(character.name || '')}&flipX=${character.flipX}` + (character.includeBackground ? `&bgColor=${bgColorText}` : '');\n};\n\nconst isOnDev = window.location.host.indexOf('.dev') !== -1;\nconst isOnDomain = window.location.host.indexOf('.design') !== -1;\nconst isOnHttps = window.location.protocol.indexOf('https') !== -1;\nif (isOnDomain && !isOnHttps) window.location.protocol = 'https';else {\n  ReactDOM.render(React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), document.getElementById('root')); // if (!isOnDev) registerServiceWorker();\n\n  unregister();\n}","map":{"version":3,"sources":["C:/Users/19065019/react-test/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","unregister","window","generateAvatarLink","character","linkType","itemEntries","Object","values","selectedItems","filter","item","id","visible","undefined","map","itemEntry","itemId","Number","animationName","emotion","region","toLowerCase","version","hue","saturation","contrast","brightness","alpha","islot","vslot","backgroundColor","JSON","parse","localStorage","bgColorText","rgb","r","g","b","a","itemEntriesPayload","stringify","skin","encodeURIComponent","substr","length","action","frame","mercEars","illiumEars","highFloraEars","zoom","encodeURI","name","flipX","includeBackground","isOnDev","location","host","indexOf","isOnDomain","isOnHttps","protocol","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker, { unregister } from './registerServiceWorker';\nimport './index.css';\n\nwindow.generateAvatarLink = function (character, linkType) {\n  let itemEntries = Object.values(character.selectedItems).filter(item => item.id && (item.visible === undefined || item.visible)).map(item => {\n    let itemEntry = {\n      itemId: Number(item.id)\n    }\n\n    if ((item.id >= 20000 && item.id < 30000) || (item.id >= 1010000 && item.id < 1020000)) itemEntry.animationName = character.emotion\n    if (item.region && item.region.toLowerCase() != 'gms') itemEntry.region = item.region\n    if (item.version && item.version.toLowerCase() != 'latest') itemEntry.version = item.version\n    if (item.hue) itemEntry.hue = item.hue\n    if (item.saturation != 1) itemEntry.saturation = item.saturation\n    if (item.contrast != 1) itemEntry.contrast = item.contrast\n    if (item.brightness != 1) itemEntry.brightness = item.brightness\n    if (item.alpha != 1) itemEntry.alpha = item.alpha\n    if (item.islot) itemEntry.islot = item.islot\n    if (item.vslot) itemEntry.vslot = item.vslot\n\n    return itemEntry\n  })\n\n  let backgroundColor = JSON.parse(localStorage['backgroundColor'] || false) || {\"hsl\":{\"h\":0,\"s\":0,\"l\":0,\"a\":0},\"hex\":\"transparent\",\"rgb\":{\"r\":0,\"g\":0,\"b\":0,\"a\":0},\"hsv\":{\"h\":0,\"s\":0,\"v\":0,\"a\":0},\"oldHue\":0,\"source\":\"rgb\"}\n  const bgColorText = `${backgroundColor.rgb.r},${backgroundColor.rgb.g},${backgroundColor.rgb.b},${backgroundColor.rgb.a}`\n\n  let itemEntriesPayload = JSON.stringify([\n    ...itemEntries,\n    { itemId: Number(character.skin), region: localStorage['region'], version: localStorage['version'] },\n    { itemId: Number(character.skin) + 10000, region: localStorage['region'], version: localStorage['version'] }\n  ])\n  itemEntriesPayload = encodeURIComponent(itemEntriesPayload.substr(1, itemEntriesPayload.length - 2))\n  return `https://maplestory.io/api/KMS/latest/character/${itemEntriesPayload}/${linkType ? linkType : (`${character.action}/${character.frame}`)}?showears=${character.mercEars}&showLefEars=${character.illiumEars}&showHighLefEars=${character.highFloraEars}&resize=${character.zoom}&name=${encodeURI(character.name || '')}&flipX=${character.flipX}` + (character.includeBackground ? `&bgColor=${bgColorText}` : '')\n}\n\nconst isOnDev = window.location.host.indexOf('.dev') !== -1\nconst isOnDomain = window.location.host.indexOf('.design') !== -1\nconst isOnHttps = window.location.protocol.indexOf('https') !== -1\nif (isOnDomain && !isOnHttps)\n  window.location.protocol = 'https'\nelse {\n  ReactDOM.render(<App />, document.getElementById('root'));\n  // if (!isOnDev) registerServiceWorker();\n  unregister()\n}\n"]},"metadata":{},"sourceType":"module"}