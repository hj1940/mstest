{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\19065019\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\19065019\\\\react-test\\\\src\\\\components\\\\CharacterList\\\\PetEntry\\\\index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport _ from 'lodash';\nimport Toggle from 'react-toggle';\nimport { Tooltip } from 'react-tippy';\nimport axios from 'axios';\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport 'react-tippy/dist/tippy.css';\nimport RcTooltip from 'rc-tooltip';\nimport Slider from 'rc-slider';\nconst petLoader = axios.get(`https://maplestory.io/api/KMS/328/pet`).then(petResp => {\n  let uniqPets = _.uniqBy(petResp.data, pet => pet.key);\n\n  pets = uniqPets.map(pet => {\n    return {\n      petId: pet.key,\n      name: pet.value\n    };\n  });\n}); // For some reason the standard [].map doesn't work here. :(\n\nlet pets = [];\n\nclass PetEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: ['stand1', 'stand0']\n    }; // Populate true action list\n\n    axios.get(`https://maplestory.io/api/KMS/328/pet/actions/${(props.pet || {}).petId || 5000000}`).then(response => this.setState({\n      actions: _.sortBy(_.keys(response.data), a => a)\n    }));\n    if (pets.length > 0) this.state.petsLoaded = true;else petLoader.then(() => this.setState({\n      petsLoaded: true\n    }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.pet && this.props.pet && prevProps.pet.petId == this.props.pet.petId) return;\n    const petId = this.props.pet.petId;\n    axios.get(`https://maplestory.io/api/${localStorage['region']}/${localStorage['version']}/pet/actions/${petId || 5000000}`).then(response => this.setState({\n      actions: _.sortBy(_.keys(response.data), a => a)\n    }));\n  }\n\n  render() {\n    const _this$props = this.props,\n          pet = _this$props.pet,\n          isSelected = _this$props.isSelected,\n          canvasMode = _this$props.canvasMode,\n          onUpdatePet = _this$props.onUpdatePet,\n          onDeletePet = _this$props.onDeletePet,\n          otherProps = _objectWithoutProperties(_this$props, [\"pet\", \"isSelected\", \"canvasMode\", \"onUpdatePet\", \"onDeletePet\"]);\n\n    return React.createElement(Tooltip, {\n      html: this.customizePet(pet),\n      delay: [100, 300],\n      position: canvasMode ? undefined : 'bottom',\n      interactive: true,\n      theme: \"light\",\n      distance: 295,\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({\n      className: 'pet ' + (pet.visible ? 'disabled ' : 'enabled ') + (isSelected ? 'active' : 'inactive'),\n      style: {\n        backgroundImage: 'url(' + pet.summary + ')',\n        transform: pet.flipX ? 'scaleX(-1)' : ''\n      }\n    }, otherProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \"\\xA0\"));\n  }\n\n  customizePet(pet) {\n    const localized = this.props.localized;\n    return React.createElement(\"div\", {\n      className: \"pet-customizeable-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"btn bg-red text-white right\",\n      onClick: this.deletePet.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, localized.deletePet)), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, localized.petType), React.createElement(\"select\", {\n      onChange: this.changePetId.bind(this),\n      value: pet.petId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, pets.map(a => React.createElement(\"option\", {\n      value: a.petId,\n      key: 'petSelect' + a.petId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, a.name)))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, localized.action), React.createElement(\"select\", {\n      onChange: this.changeAction.bind(this),\n      value: pet.animation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.actions.map(a => React.createElement(\"option\", {\n      value: a,\n      key: a,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, a)))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, localized.frame), React.createElement(Slider, {\n      value: pet.frame || 0,\n      min: 0,\n      max: 10,\n      handle: handle,\n      onChange: this.changeFrame.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, localized.zoom), React.createElement(Slider, {\n      value: pet.zoom || 1,\n      min: 1,\n      max: 10,\n      handle: handle,\n      onChange: this.changeZoom.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, localized.visible), React.createElement(Toggle, {\n      onChange: this.toggleVisibility.bind(this),\n      checked: pet.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, localized.flipHorizontal), React.createElement(Toggle, {\n      onChange: this.toggleFlipX.bind(this),\n      checked: pet.flipX,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, localized.footholdSnapping), React.createElement(Toggle, {\n      onChange: this.toggleFHSnap.bind(this),\n      checked: pet.fhSnap || false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, localized.lock), React.createElement(Toggle, {\n      onChange: this.toggleLock.bind(this),\n      checked: pet.locked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })));\n  }\n\n  toggleFHSnap(e) {\n    this.props.onUpdatePet(this.props.pet, {\n      fhSnap: !this.props.pet.fhSnap\n    });\n  }\n\n  toggleFlipX(e) {\n    this.props.onUpdatePet(this.props.pet, {\n      flipX: !this.props.pet.flipX\n    });\n  }\n\n  deletePet() {\n    this.props.onDeletePet(this.props.pet);\n  }\n\n  changePetId(e) {\n    this.props.onUpdatePet(this.props.pet, {\n      petId: e.target.value\n    });\n  }\n\n  changeAction(e) {\n    this.props.onUpdatePet(this.props.pet, {\n      animation: e.target.value\n    });\n  }\n\n  changeFrame(e) {\n    this.props.onUpdatePet(this.props.pet, {\n      frame: e\n    });\n  }\n\n  changeZoom(e) {\n    this.props.onUpdatePet(this.props.pet, {\n      zoom: e\n    });\n  }\n\n  toggleVisibility(e) {\n    this.props.onUpdatePet(this.props.pet, {\n      visible: !this.props.pet.visible\n    });\n  }\n\n  toggleLock(e) {\n    this.props.onUpdatePet(this.props.pet, {\n      locked: !this.props.pet.locked\n    });\n  }\n\n}\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst handle = props => {\n  const value = props.value,\n        dragging = props.dragging,\n        index = props.index,\n        restProps = _objectWithoutProperties(props, [\"value\", \"dragging\", \"index\"]);\n\n  return React.createElement(RcTooltip, {\n    prefixCls: \"rc-slider-tooltip\",\n    overlay: value,\n    visible: dragging,\n    placement: \"top\",\n    style: {\n      border: \"solid 2px hsl(\" + value + \", 53%, 53%)\"\n    },\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Handle, Object.assign({\n    value: value\n  }, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })));\n};\n\nexport default PetEntry;","map":{"version":3,"sources":["C:/Users/19065019/react-test/src/components/CharacterList/PetEntry/index.js"],"names":["React","Component","_","Toggle","Tooltip","axios","RcTooltip","Slider","petLoader","get","then","petResp","uniqPets","uniqBy","data","pet","key","pets","map","petId","name","value","PetEntry","constructor","props","state","actions","response","setState","sortBy","keys","a","length","petsLoaded","componentDidUpdate","prevProps","localStorage","render","isSelected","canvasMode","onUpdatePet","onDeletePet","otherProps","customizePet","undefined","visible","backgroundImage","summary","transform","flipX","localized","deletePet","bind","petType","changePetId","action","changeAction","animation","frame","handle","changeFrame","zoom","changeZoom","toggleVisibility","flipHorizontal","toggleFlipX","footholdSnapping","toggleFHSnap","fhSnap","lock","toggleLock","locked","e","target","createSliderWithTooltip","Range","Handle","dragging","index","restProps","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport _ from 'lodash'\nimport Toggle from 'react-toggle'\nimport { Tooltip } from 'react-tippy'\nimport axios from 'axios'\nimport 'rc-slider/assets/index.css'\nimport 'rc-tooltip/assets/bootstrap.css'\nimport 'react-tippy/dist/tippy.css';\nimport RcTooltip from 'rc-tooltip'\nimport Slider from 'rc-slider'\n\nconst petLoader = axios.get(`https://maplestory.io/api/KMS/328/pet`)\n  .then(petResp =>\n    {\n      let uniqPets = _.uniqBy(petResp.data, pet => pet.key)\n      pets = uniqPets.map(pet => {\n        return {\n          petId: pet.key,\n          name: pet.value\n        }\n      })\n    }) // For some reason the standard [].map doesn't work here. :(\n\nlet pets = []\n\nclass PetEntry extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      actions: ['stand1', 'stand0']\n    }\n\n    // Populate true action list\n    axios.get(`https://maplestory.io/api/KMS/328/pet/actions/${(props.pet || {}).petId || 5000000}`)\n      .then(response => this.setState({actions: _.sortBy(_.keys(response.data), a => a)}))\n    if (pets.length > 0) this.state.petsLoaded = true;\n    else petLoader.then(() => this.setState({ petsLoaded: true }))\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.pet && this.props.pet && prevProps.pet.petId == this.props.pet.petId) return\n    const { pet: { petId } } = this.props\n\n    axios.get(`https://maplestory.io/api/${localStorage['region']}/${localStorage['version']}/pet/actions/${petId || 5000000}`)\n      .then(response => this.setState({actions: _.sortBy(_.keys(response.data), a => a)}))\n  }\n\n  render() {\n    const { pet, isSelected, canvasMode, onUpdatePet, onDeletePet, ...otherProps } = this.props\n    return (\n      <Tooltip html={this.customizePet(pet)} delay={[100, 300]} position={canvasMode ? undefined : 'bottom'} interactive={true} theme='light' distance={295} arrow={true}>\n        <div\n          className={'pet ' + (pet.visible ? 'disabled ' : 'enabled ') + (isSelected ? 'active' : 'inactive')}\n          style={{\n            backgroundImage: 'url('+pet.summary+')',\n            transform: pet.flipX ? 'scaleX(-1)' : ''\n          }}\n          {...otherProps}>&nbsp;</div>\n      </Tooltip>\n    )\n  }\n\n  customizePet(pet) {\n    const { localized } = this.props\n    return (<div className='pet-customizeable-options'>\n      <div>\n        <a href=\"#\" className='btn bg-red text-white right' onClick={this.deletePet.bind(this)}>{localized.deletePet}</a>\n      </div>\n      <label>\n        <span>{localized.petType}</span>\n        <select onChange={this.changePetId.bind(this)} value={pet.petId}>\n          {\n            pets.map(a => (\n              <option value={a.petId} key={'petSelect' + a.petId}>{a.name}</option>\n            ))\n          }\n        </select>\n      </label>\n      <label>\n        <span>{localized.action}</span>\n        <select onChange={this.changeAction.bind(this)} value={pet.animation}>\n          {\n            this.state.actions.map(a => (\n              <option value={a} key={a}>{a}</option>\n            ))\n          }\n        </select>\n      </label>\n      <label>\n        <span>{localized.frame}</span>\n        <Slider\n          value={pet.frame || 0}\n          min={0}\n          max={10}\n          handle={handle}\n          onChange={this.changeFrame.bind(this)} />\n      </label>\n      <label>\n        <span>{localized.zoom}</span>\n        <Slider\n          value={pet.zoom || 1}\n          min={1}\n          max={10}\n          handle={handle}\n          onChange={this.changeZoom.bind(this)} />\n      </label>\n      <label>\n        <span>{localized.visible}</span>\n        <Toggle onChange={this.toggleVisibility.bind(this)} checked={pet.visible} />\n      </label>\n      <label>\n        <span>{localized.flipHorizontal}</span>\n        <Toggle onChange={this.toggleFlipX.bind(this)} checked={pet.flipX} />\n      </label>\n      <label>\n        <span>{localized.footholdSnapping}</span>\n        <Toggle onChange={this.toggleFHSnap.bind(this)} checked={pet.fhSnap || false} />\n      </label>\n      <label>\n        <span>{localized.lock}</span>\n        <Toggle onChange={this.toggleLock.bind(this)} checked={pet.locked} />\n      </label>\n    </div>)\n  }\n\n  toggleFHSnap(e) {\n    this.props.onUpdatePet(this.props.pet, { fhSnap: !this.props.pet.fhSnap })\n  }\n\n  toggleFlipX(e) {\n    this.props.onUpdatePet(this.props.pet, { flipX: !this.props.pet.flipX })\n  }\n\n  deletePet() {\n    this.props.onDeletePet(this.props.pet)\n  }\n\n  changePetId (e) {\n    this.props.onUpdatePet(this.props.pet, { petId: e.target.value })\n  }\n\n  changeAction (e) {\n    this.props.onUpdatePet(this.props.pet, { animation: e.target.value })\n  }\n\n  changeFrame(e) {\n    this.props.onUpdatePet(this.props.pet, { frame: e });\n  }\n\n  changeZoom(e) {\n    this.props.onUpdatePet(this.props.pet, { zoom: e });\n  }\n\n  toggleVisibility(e) {\n    this.props.onUpdatePet(this.props.pet, { visible: !this.props.pet.visible })\n  }\n\n  toggleLock(e) {\n    this.props.onUpdatePet(this.props.pet, { locked: !this.props.pet.locked })\n  }\n}\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <RcTooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      style={{border: \"solid 2px hsl(\"+value+\", 53%, 53%)\"}}\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </RcTooltip>\n  );\n};\n\nexport default PetEntry\n"]},"metadata":{},"sourceType":"module"}