{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19065019\\\\react-test\\\\src\\\\components\\\\IntroModal\\\\index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport Modal from 'react-modal';\n\nclass IntroModal extends Component {\n  render() {\n    return React.createElement(Modal, {\n      isOpen: this.props.isOpen,\n      className: {\n        base: 'intro-modal',\n        afterOpen: 'intro-modal-opened'\n      },\n      overlayClassName: {\n        base: 'intro-modal-overlay',\n        afterOpen: 'intro-modal-overlay-opened'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/finalicon.svg\",\n      className: \"intro-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      onClick: this.closeModal.bind(this),\n      className: \"btn bg-green text-white right intro-dismiss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), \" I understand\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"MapleStory:\"), \" Design\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"modal-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"The \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"unofficial\"), \" MapleStory simulator and designer.\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Latest Updates\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Visit our \", React.createElement(\"a\", {\n      href: \"http://blog.crr.io\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"blog\"), \" for more information about our latest updates, new features, and bug fixes on MapleStory: Design.\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Have feedback or want to report a bug?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Let us know on our \", React.createElement(\"a\", {\n      href: \"https://discord.gg/D65Grk9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Discord\"), \" or by email at support@crr.io.\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Disclaimer\"), React.createElement(\"span\", {\n      className: \"avatar-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.getRandomAvatar()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"All assets and resources regarding MapleStory thereof are the sole property of \", React.createElement(\"a\", {\n      href: \"//nexon.net\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Nexon\"), \" and applies to their Terms of Use. By using this service, you agree to respect all copyrights and to not use any assets commercially without permission from Nexon.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"We are not an official MapleStory server nor fansite; \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"we provide this service for free in the spirit of free-to-play gaming.\")));\n  }\n\n  closeModal() {\n    this.props.onSetModalOpen(false);\n  }\n\n  getRandomAvatar() {\n    const knownAvatars = ['2010/1072368,1052167,1052167,1002185,1012055,1022043,38006,20544', // Andy (Crrio)\n    '2000/1073181,1053109,1053109,1004862,33005,21544', // Tyler Corsair (Crrio)\n    '2000/1052923,1052923,1002186,33515,21136', // Andy (Pink Bean's developer)\n    '2001/20305,30130,1050118', // Dray86 (Maple Kombat)\n    '2000/1004776,21645,35707,1042245,1062232', // Paul (Artist and Logo designer)\n    '2001/23855,1010004,1042046,33040,1062040,1072234,1102059,1082162,1402010' // Austin (Character API help + developer)\n    ];\n    const chosenAvatar = knownAvatars[Math.floor(Math.random() * knownAvatars.length)];\n    return React.createElement(\"img\", {\n      src: `https://maplestory.io/api/KMS/328/character/center/${chosenAvatar}/sit/0`,\n      alt: `avatar`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default IntroModal;","map":{"version":3,"sources":["C:/Users/19065019/react-test/src/components/IntroModal/index.js"],"names":["React","Component","Modal","IntroModal","render","props","isOpen","base","afterOpen","closeModal","bind","getRandomAvatar","onSetModalOpen","knownAvatars","chosenAvatar","Math","floor","random","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport Modal from 'react-modal'\n\nclass IntroModal extends Component {\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        className={{\n          base: 'intro-modal',\n          afterOpen: 'intro-modal-opened',\n        }}\n        overlayClassName={{\n          base: 'intro-modal-overlay',\n          afterOpen: 'intro-modal-overlay-opened'\n        }}>\n        <img src=\"/finalicon.svg\" className=\"intro-logo\"/><span onClick={this.closeModal.bind(this)} className=\"btn bg-green text-white right intro-dismiss\"><i className=\"fa fa-check\"></i> I understand</span>\n        <h1>\n          <b>MapleStory:</b> Design\n          <br/>\n          <span className=\"modal-desc\">The <b>unofficial</b> MapleStory simulator and designer.</span>\n        </h1>\n        <h3>Latest Updates</h3>\n        <p>Visit our <a href=\"http://blog.crr.io\">blog</a> for more information about our latest updates, new features, and bug fixes on MapleStory: Design.</p>\n        <h3>Have feedback or want to report a bug?</h3>\n        <p>Let us know on our <a href=\"https://discord.gg/D65Grk9\">Discord</a> or by email at support@crr.io.</p>\n        <h3>Disclaimer</h3><span className=\"avatar-box\">{this.getRandomAvatar()}</span>\n        <p>All assets and resources regarding MapleStory thereof are the sole property of <a href=\"//nexon.net\">Nexon</a> and applies to their Terms of Use. By using this service, you agree to respect all copyrights and to not use any assets commercially without permission from Nexon.</p>\n        <p>We are not an official MapleStory server nor fansite; <i>we provide this service for free in the spirit of free-to-play gaming.</i></p>\n      </Modal>\n    )\n  }\n\n  closeModal () {\n    this.props.onSetModalOpen(false)\n  }\n\n  getRandomAvatar () {\n    const knownAvatars = [\n      '2010/1072368,1052167,1052167,1002185,1012055,1022043,38006,20544', // Andy (Crrio)\n      '2000/1073181,1053109,1053109,1004862,33005,21544', // Tyler Corsair (Crrio)\n      '2000/1052923,1052923,1002186,33515,21136', // Andy (Pink Bean's developer)\n      '2001/20305,30130,1050118', // Dray86 (Maple Kombat)\n      '2000/1004776,21645,35707,1042245,1062232', // Paul (Artist and Logo designer)\n      '2001/23855,1010004,1042046,33040,1062040,1072234,1102059,1082162,1402010' // Austin (Character API help + developer)\n    ]\n\n    const chosenAvatar = knownAvatars[Math.floor(Math.random() * knownAvatars.length)]\n\n    return (<img src={`https://maplestory.io/api/KMS/328/character/center/${chosenAvatar}/sit/0`} alt={`avatar`} />)\n  }\n}\n\nexport default IntroModal\n"]},"metadata":{},"sourceType":"module"}