{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\19065019\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\19065019\\\\react-test\\\\src\\\\components\\\\RenderCanvas\\\\index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport _ from 'lodash';\nimport Toggle from 'react-toggle';\nimport { Tooltip } from 'react-tippy';\nimport axios from 'axios';\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport 'react-tippy/dist/tippy.css';\nimport RcTooltip from 'rc-tooltip';\nimport Slider from 'rc-slider';\nimport GenericCanvasElement from './GenericCanvasElement';\nimport CharacterCanvasElement from './CharacterCanvasElement';\nimport Draggable, { DraggableCore } from 'react-draggable';\nimport { NotificationManager } from 'react-notifications';\nconst renderFootholds = JSON.parse(localStorage['isDebugMode'] || 'false') === true;\nconst region = !localStorage['region'] ? 'GMS' : localStorage['region'];\nconst version = !localStorage['version'] ? 'latest' : localStorage['version'];\n\nclass RenderCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      x: Number(localStorage['canvasX']) || 0,\n      y: Number(localStorage['canvasX']) || 0,\n      childDragCount: 0\n    };\n\n    if (props.selectedRenderable !== undefined && (Number.isNaN(Number(localStorage['canvasX'])) || Number.isNaN(Number(localStorage['canvasY'])))) {\n      const renderable = props.renderables[props.selectedRenderable];\n\n      if (renderable) {\n        this.state = _objectSpread({}, this.state, {\n          x: Math.round(-renderable.position.x),\n          y: Math.round(-renderable.position.y)\n        });\n      }\n    }\n\n    if (props.mapId) {\n      axios.get(`https://maplestory.io/api/KMS/328/map/${props.mapId}`).then(response => this.setState({\n        mapData: response.data\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.focusRenderable !== this.props.focusRenderable) {\n      const _this$props = this.props,\n            focusRenderable = _this$props.focusRenderable,\n            mapId = _this$props.mapId;\n      const mapData = this.state.mapData;\n      const renderable = this.props.renderables[focusRenderable];\n      if (renderable) this.setState({\n        x: -renderable.position.x + (mapData ? mapData.vrBounds.x : 0),\n        y: -renderable.position.y + (mapData ? mapData.vrBounds.y : 0)\n      });\n    }\n\n    if (prevProps.mapId != this.props.mapId && this.props.mapId) {\n      axios.get(`https://maplestory.io/api/KMS/328/map/${this.props.mapId}`).then(response => {\n        let stateChanges = {\n          mapData: response.data\n        };\n\n        if (this.state.mapData === undefined) {\n          const _this$props2 = this.props,\n                focusRenderable = _this$props2.focusRenderable,\n                mapId = _this$props2.mapId;\n          const _stateChanges = stateChanges,\n                mapData = _stateChanges.mapData;\n          const renderable = this.props.renderables[focusRenderable];\n          if (renderable) stateChanges = _objectSpread({}, stateChanges, {\n            x: Math.round(-renderable.position.x + (mapData ? mapData.vrBounds.x : 0)),\n            y: Math.round(-renderable.position.y + (mapData ? mapData.vrBounds.y : 0))\n          });\n          localStorage['canvasX'] = stateChanges.x;\n          localStorage['canvasY'] = stateChanges.y;\n        }\n\n        this.setState(stateChanges);\n      });\n    }\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          renderables = _this$props3.renderables,\n          mapId = _this$props3.mapId,\n          zoom = _this$props3.zoom,\n          backgroundColor = _this$props3.backgroundColor,\n          localized = _this$props3.localized;\n    const mapData = this.state.mapData;\n    const mapOrigin = {};\n    const styleOptions = {\n      transform: `translate(${this.state.x}px, ${this.state.y}px) translateZ(0)`\n    };\n    if (zoom != 1) styleOptions.transform = styleOptions.transform + ` scale(${zoom})`;\n    if (mapData) mapOrigin.transform = `translate(${-mapData.vrBounds.x}px, ${-mapData.vrBounds.y}px)`;\n    return React.createElement(\"div\", {\n      className: 'canvas-bg' + (this.state.dragging ? ' dragging' : ''),\n      style: {\n        backgroundPositionX: `${this.state.x}px`,\n        backgroundPositionY: `${this.state.y}px`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(DraggableCore, {\n      onDrag: (e, o) => {\n        if (!o.deltaX && !o.deltaY) return;\n\n        if (!this.state.childDragging && (e.target.classList.contains('canvas-characters') || e.target.classList.contains('map'))) {\n          let stateChanges = {\n            x: this.state.x + o.deltaX,\n            y: this.state.y + o.deltaY,\n            dragCount: (this.state.dragCount || 0) + 1\n          };\n          localStorage['canvasX'] = stateChanges.x;\n          localStorage['canvasY'] = stateChanges.y;\n          this.setState(stateChanges);\n        }\n      },\n      onStart: function () {\n        this.setState({\n          dragging: true,\n          dragCount: 0\n        });\n        console.log('dragging');\n      }.bind(this),\n      onStop: function () {\n        this.setState({\n          dragging: false\n        });\n        console.log('done');\n      }.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'canvas-characters' + (this.state.dragging ? ' dragging' : ''),\n      onClick: this.clickCanvas.bind(this),\n      style: {\n        backgroundColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'renderables-container' + (this.state.dragging ? ' dragging' : ''),\n      style: styleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, mapId ? React.createElement(\"img\", {\n      className: \"map\",\n      src: `https://maplestory.io/api/${region}/${version}/map/${mapId}/render`,\n      draggable: false,\n      onClick: this.clickCanvas.bind(this),\n      onError: this.mapLoadingError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }) : '', mapData && renderFootholds ? React.createElement(\"svg\", {\n      className: \"map\",\n      onClick: this.clickCanvas.bind(this),\n      width: mapData.vrBounds.width,\n      height: mapData.vrBounds.height,\n      viewBox: `${mapData.vrBounds.x} ${mapData.vrBounds.y} ${mapData.vrBounds.width} ${mapData.vrBounds.height}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, (_.values(mapData.footholds) || []).map((fh, i) => React.createElement(\"line\", {\n      x1: fh.x1,\n      x2: fh.x2,\n      y1: fh.y1,\n      y2: fh.y2,\n      strokeWidth: \"2\",\n      stroke: \"black\",\n      key: 'svg' + i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))) : '', React.createElement(\"div\", {\n      style: mapOrigin,\n      className: \"character-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, renderables.filter(renderable => renderable.visible).map((renderable, i) => {\n      return this.getRenderableElement(renderable, i);\n    }))))));\n  }\n\n  clickCanvas(e) {\n    console.log(this.state.dragCount, 'click');\n    if (!this.state.dragCount) this.props.onClick(e);\n  }\n\n  getRenderableElement(renderable, index) {\n    const selectedRenderable = this.props.selectedRenderable;\n    return renderable.type == 'character' ? React.createElement(CharacterCanvasElement, {\n      onStart: this.childDragging.bind(this),\n      onStop: this.childStopDragging.bind(this),\n      onClick: function () {\n        if (this.state.childDragCount === 0) this.props.onClickRenderable(renderable);\n      }.bind(this),\n      onUpdateRenderablePosition: this.handleRenderableElementMovement.bind(this, renderable),\n      character: renderable,\n      selected: selectedRenderable === index,\n      localized: this.props.localized,\n      key: 'canvas' + renderable.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }) : React.createElement(GenericCanvasElement, {\n      onStart: this.childDragging.bind(this),\n      onStop: this.childStopDragging.bind(this),\n      onClick: function () {\n        if (this.state.childDragCount === 0) this.props.onClickRenderable(renderable);\n      }.bind(this),\n      onUpdateRenderablePosition: this.handleRenderableElementMovement.bind(this, renderable),\n      renderable: renderable,\n      summary: renderable.summary,\n      selected: selectedRenderable === index,\n      localized: this.props.localized,\n      key: 'canvas' + renderable.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    });\n  }\n\n  handleRenderableElementMovement(renderable, o, e) {\n    if (!e.deltaX && !e.deltaY) return;\n    const zoom = this.props.zoom;\n    const mapData = this.state.mapData;\n\n    const footholds = _.values((mapData || {}).footholds);\n\n    const deltaX = e.deltaX,\n          deltaY = e.deltaY;\n    const cursorX = e.x,\n          cursorY = e.y;\n    this.setState({\n      childDragCount: this.state.childDragCount + 1\n    });\n    renderable.position = renderable.position || {\n      x: 0,\n      y: 0\n    };\n    if (Number.isNaN(renderable.position.x)) renderable.position.x = 0;\n    if (Number.isNaN(renderable.position.y)) renderable.position.y = 0;\n    let _renderable$position = renderable.position,\n        x = _renderable$position.x,\n        y = _renderable$position.y;\n    x = Math.round(cursorX / zoom);\n    y = Math.round(cursorY / zoom);\n\n    if (footholds && renderable.fhSnap) {\n      const validFootholds = footholds.filter(fh => {\n        const isVertical = fh.x1 == fh.x2;\n        const isWithin = fh.x1 < x && fh.x2 > x || fh.x2 < x && fh.x1 > x;\n        if (isVertical || !isWithin) return false;\n        const x1 = fh.x1,\n              x2 = fh.x2,\n              y1 = fh.y1,\n              y2 = fh.y2;\n        const yAtX = x == x1 || x2 == x1 || y2 == y1 ? y1 : y1 + (y2 - y1) * ((x - x1) / (x2 - x1));\n        return Math.abs(yAtX - y) < 50;\n      });\n      const alignedFootholds = validFootholds.map(fh => {\n        const x1 = fh.x1,\n              x2 = fh.x2,\n              y1 = fh.y1,\n              y2 = fh.y2;\n        const yAtX = x == x1 || x2 == x1 || y2 == y1 ? y1 : y1 + (y2 - y1) * ((x - x1) / (x2 - x1));\n        return _objectSpread({}, fh, {\n          yAtX,\n          difference: Math.abs(yAtX - y)\n        });\n      });\n\n      const snapFoothold = _.find(alignedFootholds, fh => fh.difference < 50);\n\n      if (snapFoothold) y = snapFoothold.yAtX;\n    }\n\n    this.props.onUpdateRenderable(renderable, {\n      position: {\n        x,\n        y\n      }\n    });\n  }\n\n  mapLoadingError() {\n    NotificationManager.warning(`There was an error rendering that map`, '', 10000);\n  }\n\n  childDragging() {\n    this.setState({\n      childDragging: true,\n      childDragCount: 0\n    });\n  }\n\n  childStopDragging() {\n    this.setState({\n      childDragging: false\n    });\n  }\n\n}\n\nexport default RenderCanvas;","map":{"version":3,"sources":["C:/Users/19065019/react-test/src/components/RenderCanvas/index.js"],"names":["React","Component","_","Toggle","Tooltip","axios","RcTooltip","Slider","GenericCanvasElement","CharacterCanvasElement","Draggable","DraggableCore","NotificationManager","renderFootholds","JSON","parse","localStorage","region","version","RenderCanvas","constructor","props","state","x","Number","y","childDragCount","selectedRenderable","undefined","isNaN","renderable","renderables","Math","round","position","mapId","get","then","response","setState","mapData","data","componentDidUpdate","prevProps","focusRenderable","vrBounds","stateChanges","render","zoom","backgroundColor","localized","mapOrigin","styleOptions","transform","dragging","backgroundPositionX","backgroundPositionY","e","o","deltaX","deltaY","childDragging","target","classList","contains","dragCount","console","log","bind","clickCanvas","mapLoadingError","width","height","values","footholds","map","fh","i","x1","x2","y1","y2","filter","visible","getRenderableElement","onClick","index","type","childStopDragging","onClickRenderable","handleRenderableElementMovement","id","summary","cursorX","cursorY","fhSnap","validFootholds","isVertical","isWithin","yAtX","abs","alignedFootholds","difference","snapFoothold","find","onUpdateRenderable","warning"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport _ from 'lodash'\nimport Toggle from 'react-toggle'\nimport { Tooltip } from 'react-tippy'\nimport axios from 'axios'\nimport 'rc-slider/assets/index.css'\nimport 'rc-tooltip/assets/bootstrap.css'\nimport 'react-tippy/dist/tippy.css';\nimport RcTooltip from 'rc-tooltip'\nimport Slider from 'rc-slider'\nimport GenericCanvasElement from './GenericCanvasElement'\nimport CharacterCanvasElement from './CharacterCanvasElement'\nimport Draggable, { DraggableCore } from 'react-draggable'\nimport { NotificationManager } from 'react-notifications'\n\nconst renderFootholds = JSON.parse(localStorage['isDebugMode'] || 'false') === true\n\nconst region = !localStorage['region'] ? 'GMS' : localStorage['region']\nconst version = !localStorage['version'] ? 'latest' : localStorage['version']\n\nclass RenderCanvas extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      x: Number(localStorage['canvasX']) || 0,\n      y: Number(localStorage['canvasX']) || 0,\n      childDragCount: 0\n    }\n\n    if (props.selectedRenderable !== undefined && (Number.isNaN(Number(localStorage['canvasX'])) || Number.isNaN(Number(localStorage['canvasY'])))) {\n      const renderable = props.renderables[props.selectedRenderable]\n      if (renderable){\n        this.state = {\n          ...this.state,\n          x: Math.round(-renderable.position.x),\n          y: Math.round(-renderable.position.y)\n        }\n      }\n    }\n\n    if (props.mapId) {\n      axios.get(`https://maplestory.io/api/KMS/328/map/${props.mapId}`)\n        .then(response => this.setState({mapData: response.data}))\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.focusRenderable !== this.props.focusRenderable){\n      const { focusRenderable, mapId } = this.props\n      const { mapData } = this.state\n\n      const renderable = this.props.renderables[focusRenderable]\n      if (renderable)\n        this.setState({ x: -renderable.position.x + (mapData ? mapData.vrBounds.x : 0), y: -renderable.position.y + (mapData ? mapData.vrBounds.y : 0) })\n    }\n    if (prevProps.mapId != this.props.mapId && this.props.mapId) {\n      axios.get(`https://maplestory.io/api/KMS/328/map/${this.props.mapId}`)\n        .then(response => {\n          let stateChanges = {\n            mapData: response.data\n          };\n\n          if (this.state.mapData === undefined) {\n            const { focusRenderable, mapId } = this.props\n            const { mapData } = stateChanges\n\n            const renderable = this.props.renderables[focusRenderable]\n            if (renderable)\n              stateChanges = {\n                ...stateChanges,\n                x: Math.round(-renderable.position.x + (mapData ? mapData.vrBounds.x : 0)),\n                y: Math.round(-renderable.position.y + (mapData ? mapData.vrBounds.y : 0))\n              }\n\n              localStorage['canvasX'] = stateChanges.x\n              localStorage['canvasY'] = stateChanges.y\n          }\n\n          this.setState(stateChanges)\n        })\n    }\n  }\n\n  render() {\n    const { renderables, mapId, zoom, backgroundColor, localized } = this.props\n    const { mapData } = this.state\n    const mapOrigin = {}\n\n    const styleOptions = { transform: `translate(${this.state.x}px, ${this.state.y}px) translateZ(0)` }\n    if (zoom != 1) styleOptions.transform = styleOptions.transform + ` scale(${zoom})`\n\n    if (mapData) mapOrigin.transform = `translate(${-mapData.vrBounds.x}px, ${-mapData.vrBounds.y}px)`\n\n    return (\n      <div className={'canvas-bg' + (this.state.dragging ? ' dragging' : '')} style={{ backgroundPositionX: `${this.state.x}px`, backgroundPositionY: `${this.state.y}px` }}>\n        <DraggableCore\n          onDrag={(e, o) => {\n            if (!o.deltaX && !o.deltaY) return\n            if(!this.state.childDragging && (e.target.classList.contains('canvas-characters') || e.target.classList.contains('map'))) {\n              let stateChanges = { x: this.state.x + o.deltaX, y: this.state.y + o.deltaY, dragCount: (this.state.dragCount || 0) + 1 }\n              localStorage['canvasX'] = stateChanges.x\n              localStorage['canvasY'] = stateChanges.y\n              this.setState(stateChanges)\n            }\n          }}\n          onStart={(function() { this.setState({ dragging: true, dragCount: 0 }); console.log('dragging') }).bind(this)}\n          onStop={(function() { this.setState({ dragging: false }); console.log('done') }).bind(this)}\n          >\n          <div className={'canvas-characters' + (this.state.dragging ? ' dragging' : '')} onClick={this.clickCanvas.bind(this)} style={{ backgroundColor }}>\n            <div className={'renderables-container' + (this.state.dragging ? ' dragging' : '')} style={styleOptions}>\n            {\n              mapId ? <img className='map' src={`https://maplestory.io/api/${region}/${version}/map/${mapId}/render`} draggable={false} onClick={this.clickCanvas.bind(this)} onError={this.mapLoadingError} /> : ''\n            }\n            {\n              (mapData && renderFootholds) ? <svg className='map' onClick={this.clickCanvas.bind(this)} width={mapData.vrBounds.width} height={mapData.vrBounds.height} viewBox={`${mapData.vrBounds.x} ${mapData.vrBounds.y} ${mapData.vrBounds.width} ${mapData.vrBounds.height}`}>{\n                ((_.values(mapData.footholds) || []).map((fh, i) =>\n                  <line x1={fh.x1} x2={fh.x2} y1={fh.y1} y2={fh.y2} strokeWidth='2' stroke='black' key={'svg' + i} />\n                ))\n              }</svg> : ''\n            }\n              <div style={mapOrigin} className='character-container'>\n                {\n                  renderables\n                    .filter(renderable => renderable.visible)\n                    .map((renderable, i) => {\n                      return this.getRenderableElement(renderable, i)\n                    })\n                }\n              </div>\n            </div>\n          </div>\n        </DraggableCore>\n      </div>\n    )\n  }\n\n  clickCanvas(e) {\n    console.log(this.state.dragCount, 'click')\n    if (!this.state.dragCount)\n      this.props.onClick(e)\n  }\n\n  getRenderableElement(renderable, index) {\n    const { selectedRenderable } = this.props\n    return renderable.type == 'character' ? (\n    <CharacterCanvasElement\n      onStart={this.childDragging.bind(this)}\n      onStop={this.childStopDragging.bind(this)}\n      onClick={(function (){\n        if (this.state.childDragCount === 0)\n          this.props.onClickRenderable(renderable)\n      }).bind(this)}\n      onUpdateRenderablePosition={this.handleRenderableElementMovement.bind(this, renderable)}\n      character={renderable}\n      selected={selectedRenderable === index}\n      localized={this.props.localized}\n      key={'canvas' + renderable.id} />\n    ) : (\n    <GenericCanvasElement\n      onStart={this.childDragging.bind(this)}\n      onStop={this.childStopDragging.bind(this)}\n      onClick={(function (){\n        if (this.state.childDragCount === 0)\n          this.props.onClickRenderable(renderable)\n      }).bind(this)}\n      onUpdateRenderablePosition={this.handleRenderableElementMovement.bind(this, renderable)}\n      renderable={renderable}\n      summary={renderable.summary}\n      selected={selectedRenderable === index}\n      localized={this.props.localized}\n      key={'canvas' + renderable.id} />\n    )\n  }\n\n  handleRenderableElementMovement(renderable, o,e) {\n    if (!e.deltaX && !e.deltaY) return\n\n    const { zoom } = this.props\n    const { mapData } = this.state\n    const footholds = _.values((mapData || {}).footholds)\n\n    const { deltaX, deltaY } = e\n    const cursorX = e.x, cursorY = e.y\n    this.setState({ childDragCount: this.state.childDragCount + 1 })\n    renderable.position = renderable.position || { x:0, y:0 }\n    if(Number.isNaN(renderable.position.x)) renderable.position.x = 0\n    if(Number.isNaN(renderable.position.y)) renderable.position.y = 0\n    let { x, y } = renderable.position\n    x = Math.round(cursorX / zoom);\n    y = Math.round(cursorY / zoom);\n    if (footholds && renderable.fhSnap) {\n      const validFootholds = footholds.filter(fh => {\n        const isVertical = fh.x1 == fh.x2\n        const isWithin = (fh.x1 < x && fh.x2 > x) || (fh.x2 < x && fh.x1 > x)\n        if (isVertical || !isWithin) return false\n        const { x1, x2, y1, y2 } = fh\n        const yAtX = (x == x1 || x2 == x1 || y2 == y1) ? y1 : (y1 + ((y2 - y1) * ((x - x1) / (x2 - x1))))\n        return Math.abs(yAtX - y) < 50\n      })\n\n      const alignedFootholds = validFootholds.map(fh => {\n        const { x1, x2, y1, y2 } = fh\n        const yAtX = (x == x1 || x2 == x1 || y2 == y1) ? y1 : (y1 + ((y2 - y1) * ((x - x1) / (x2 - x1))))\n        return {\n          ...fh,\n          yAtX,\n          difference: Math.abs(yAtX - y)\n        }\n      })\n\n      const snapFoothold = _.find(alignedFootholds, fh => fh.difference < 50)\n      if (snapFoothold) y = snapFoothold.yAtX\n    }\n    this.props.onUpdateRenderable(renderable, {\n      position: {\n        x,\n        y\n      }\n    })\n  }\n\n  mapLoadingError() {\n    NotificationManager.warning(`There was an error rendering that map`, '', 10000)\n  }\n\n  childDragging() { this.setState({childDragging: true, childDragCount: 0}) }\n  childStopDragging() { this.setState({childDragging: false}) }\n}\n\nexport default RenderCanvas\n"]},"metadata":{},"sourceType":"module"}